From da256c1c034ff49c0fa220121fa6a8f1af387e60 Mon Sep 17 00:00:00 2001
From: Tomi Valkeinen <tomi.valkeinen@nokia.com>
Date: Thu, 19 Nov 2009 16:52:40 +0200
Subject: [PATCH 20/21] DSS2: OMAPFB: fix offset with YUV modes

Offset address was calculated wrongly when using YUV mode.

Signed-off-by: Tomi Valkeinen <tomi.valkeinen@nokia.com>
---
 drivers/video/omap2/omapfb/omapfb-main.c |   64 ++++++++++++++----------------
 1 files changed, 30 insertions(+), 34 deletions(-)

diff --git a/drivers/video/omap2/omapfb/omapfb-main.c b/drivers/video/omap2/omapfb/omapfb-main.c
index ef29983..0601256 100644
--- a/drivers/video/omap2/omapfb/omapfb-main.c
+++ b/drivers/video/omap2/omapfb/omapfb-main.c
@@ -790,31 +790,33 @@ static unsigned calc_rotation_offset_dma(struct fb_var_screeninfo *var,
 }
 
 static unsigned calc_rotation_offset_vrfb(struct fb_var_screeninfo *var,
-		struct fb_fix_screeninfo *fix, int rotation)
+		struct fb_fix_screeninfo *fix, int rotation, bool yuv_mode)
 {
 	unsigned offset;
+	unsigned bytespp = var->bits_per_pixel >> 3;
+
+	if (yuv_mode)
+		bytespp = 4;
 
 	if (rotation == FB_ROTATE_UD)
-		offset = (var->yres_virtual - var->yres) *
-			fix->line_length;
+		offset = (var->yres_virtual - var->yres) * fix->line_length;
 	else if (rotation == FB_ROTATE_CW)
-		offset = (var->yres_virtual - var->yres) *
-			(var->bits_per_pixel >> 3);
+		offset = (var->yres_virtual - var->yres) * bytespp;
 	else
 		offset = 0;
 
 	if (rotation == FB_ROTATE_UR)
 		offset += var->yoffset * fix->line_length +
-			var->xoffset * (var->bits_per_pixel >> 3);
+			var->xoffset * bytespp;
 	else if (rotation == FB_ROTATE_UD)
 		offset -= var->yoffset * fix->line_length +
-			var->xoffset * (var->bits_per_pixel >> 3);
+			var->xoffset * bytespp;
 	else if (rotation == FB_ROTATE_CW)
 		offset -= var->xoffset * fix->line_length +
-			var->yoffset * (var->bits_per_pixel >> 3);
+			var->yoffset * bytespp;
 	else if (rotation == FB_ROTATE_CCW)
 		offset += var->xoffset * fix->line_length +
-			var->yoffset * (var->bits_per_pixel >> 3);
+			var->yoffset * bytespp;
 
 	return offset;
 }
@@ -838,6 +840,8 @@ static int omapfb_setup_overlay(struct fb_info *fbi, struct omap_overlay *ovl,
 	int mirror;
 	int rotation = var->rotate;
 	int i;
+	bool yuv_mode;
+	bool vrfb;
 
 	for (i = 0; i < ofbi->num_overlays; i++) {
 		if (ovl != ofbi->overlays[i])
@@ -850,6 +854,15 @@ static int omapfb_setup_overlay(struct fb_info *fbi, struct omap_overlay *ovl,
 	DBG("setup_overlay %d, posx %d, posy %d, outw %d, outh %d\n", ofbi->id,
 			posx, posy, outw, outh);
 
+	r = fb_mode_to_dss_mode(var, &mode);
+	if (r) {
+		DBG("fb_mode_to_dss_mode failed");
+		goto err;
+	}
+
+	yuv_mode = mode == OMAP_DSS_COLOR_YUV2 || mode == OMAP_DSS_COLOR_UYVY;
+	vrfb = ofbi->rotation_type == OMAP_DSS_ROT_VRFB;
+
 	if (rotation == FB_ROTATE_CW || rotation == FB_ROTATE_CCW) {
 		xres = var->yres;
 		yres = var->xres;
@@ -858,19 +871,16 @@ static int omapfb_setup_overlay(struct fb_info *fbi, struct omap_overlay *ovl,
 		yres = var->yres;
 	}
 
-
-	if (ofbi->rotation_type == OMAP_DSS_ROT_VRFB) {
+	if (vrfb) {
 		data_start_p = omapfb_get_region_rot_paddr(ofbi, rotation);
 		data_start_v = NULL;
+		offset = calc_rotation_offset_vrfb(var, fix, rotation,
+				yuv_mode);
 	} else {
 		data_start_p = omapfb_get_region_paddr(ofbi);
 		data_start_v = omapfb_get_region_vaddr(ofbi);
-	}
-
-	if (ofbi->rotation_type == OMAP_DSS_ROT_VRFB)
-		offset = calc_rotation_offset_vrfb(var, fix, rotation);
-	else
 		offset = calc_rotation_offset_dma(var, fix, rotation);
+	}
 
 	data_start_p += offset;
 	data_start_v += offset;
@@ -881,28 +891,14 @@ static int omapfb_setup_overlay(struct fb_info *fbi, struct omap_overlay *ovl,
 
 	DBG("paddr %x, vaddr %p\n", data_start_p, data_start_v);
 
-	r = fb_mode_to_dss_mode(var, &mode);
-	if (r) {
-		DBG("fb_mode_to_dss_mode failed");
-		goto err;
-	}
-
-	switch (var->nonstd) {
-	case OMAPFB_COLOR_YUV422:
-	case OMAPFB_COLOR_YUY422:
-		if (ofbi->rotation_type == OMAP_DSS_ROT_VRFB) {
-			screen_width = fix->line_length
-				/ (var->bits_per_pixel >> 2);
-			break;
-		}
-	default:
+	if (yuv_mode && vrfb)
+		screen_width = fix->line_length / (var->bits_per_pixel >> 2);
+	else
 		screen_width = fix->line_length / (var->bits_per_pixel >> 3);
-		break;
-	}
 
 	ovl->get_overlay_info(ovl, &info);
 
-	if (ofbi->rotation_type == OMAP_DSS_ROT_VRFB)
+	if (vrfb)
 		mirror = 0;
 	else
 		mirror = ofbi->mirror;
-- 
1.6.5

