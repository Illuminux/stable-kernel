From 36a09214e073c4659f1398b883942236d8f49524 Mon Sep 17 00:00:00 2001
From: Enric Balletbo i Serra <eballetbo@iseebcn.com>
Date: Wed, 21 Sep 2011 12:45:11 +0200
Subject: [PATCH 12/44] OMAP3: igep0020: Add IGEP0022 expansion board support

IGEP0022 expansion board add more functionality to your IGEP v2 board
and evaluate more features like:

 - Modem GSM/GPRS based on TELIT GE865 module with SIMCARD connector
   and external cable Antenna.
 - LCD and touch interface for 7.0 inch Seiko LCD
 - LCD and touch interface for 4.3 inch Powertip LCD
 - VGA interface on D-SUB15 connector.
 - 1 x video composite inputs on RCA connector (2 x optional). Video Decoder
   based on TEXAS Video Decoder TVP5150.
 - Camera interface.
 - CAN bus interface based on MICROCHIP MCP2515 CAN controller.
 - LVDS video serializer (MAX9247) (not populated by default)

Signed-off-by: Enric Balletbo i Serra <eballetbo@iseebcn.com>
---
 arch/arm/mach-omap2/Makefile         |    1 +
 arch/arm/mach-omap2/board-igep0020.c |    8 +++
 arch/arm/mach-omap2/exp-igep0022.c   |  115 ++++++++++++++++++++++++++++++++++
 3 files changed, 124 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-omap2/exp-igep0022.c

diff --git a/arch/arm/mach-omap2/Makefile b/arch/arm/mach-omap2/Makefile
index 649311b..0f217c8 100644
--- a/arch/arm/mach-omap2/Makefile
+++ b/arch/arm/mach-omap2/Makefile
@@ -239,6 +239,7 @@ obj-$(CONFIG_MACH_CM_T35)		+= board-cm-t35.o \
 obj-$(CONFIG_MACH_CM_T3517)		+= board-cm-t3517.o
 obj-$(CONFIG_MACH_IGEP0020)		+= board-igep0020.o \
 					   board-igep00x0.o \
+					   exp-igep0022.o \
 					   hsmmc.o
 obj-$(CONFIG_MACH_OMAP3_TOUCHBOOK)	+= board-omap3touchbook.o \
 					   hsmmc.o
diff --git a/arch/arm/mach-omap2/board-igep0020.c b/arch/arm/mach-omap2/board-igep0020.c
index 1095dd7..01de013 100644
--- a/arch/arm/mach-omap2/board-igep0020.c
+++ b/arch/arm/mach-omap2/board-igep0020.c
@@ -376,6 +376,9 @@ static int __init ei485_early_param(char *str)
 
 early_param("board.ei485", ei485_early_param);
 
+/* Expansion board: IGEP0022 */
+extern void __init igep0022_init(void);
+
 static void __init igep_init(void)
 {
 	int opt;
@@ -425,6 +428,11 @@ static void __init igep_init(void)
 
 	igep0020_leds_init();
 
+	/* Expansion board initialitzations */
+	/* - IGEP0022 */
+	if (igep00x0_buddy_pdata.model == IGEP00X0_BUDDY_IGEP0022)
+		igep0022_init();
+
 	/*
 	 * WLAN-BT combo module from MuRata with SDIO interface.
 	 *
diff --git a/arch/arm/mach-omap2/exp-igep0022.c b/arch/arm/mach-omap2/exp-igep0022.c
new file mode 100644
index 0000000..c2cf2b9
--- /dev/null
+++ b/arch/arm/mach-omap2/exp-igep0022.c
@@ -0,0 +1,115 @@
+/*
+ * Copyright (C) 2010-2011 - ISEE 2007 SL
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/init.h>
+#include <linux/gpio.h>
+
+#include <plat/common.h>
+
+#include "board-igep00x0.h"
+#include "mux.h"
+
+#define IGEP2_GPIO_TSC2046_IRQ		155
+#define IGEP2_GPIO_MODEM_ON_NOFF	141
+#define IGEP2_GPIO_MODEM_NRESET		140
+#define IGEP2_GPIO_MODEM_PWRMON		156
+#define IGEP2_GPIO_MCP251X_IRQ		157
+#define IGEP2_GPIO_MCP251X_NRESET	136
+#define IGEP2_GPIO_TVP5151_PDN		126
+#define IGEP2_GPIO_TVP5151_RESET	167
+
+static inline void igep0022_i2c2_init(void)
+{
+	/*
+	 * From TVP5151 datasheet Table 3-8. Reset and Power-Down Modes
+	 *   PDN RESETB CONFIGURATION
+	 *    0    0    Reserved (unknown state)
+	 *    0    1    Powers down the decoder
+	 *    1    0    Resets the decoder
+	 *    1    1    Normal operation
+	 *
+	 * If TVP5151_PDN and TPVP5151_RESET is set to 0 the I2C2_SDA line
+	 * is forced to low level and all devices connected to I2C2 stop
+	 * working, this affects to EEPROM connected to the same bus. By default
+	 * we should configure these pins to logical 1 (Normal operation)
+	 *
+	 * OMAP3530 CBB package can have GPIO126 muxed on 2 pins: mmc1_dat4 and
+	 * cam_strobe.
+	 */
+	omap_mux_init_signal("cam_strobe.gpio_126", 0);
+	omap_mux_init_gpio(IGEP2_GPIO_TVP5151_RESET, OMAP_PIN_OUTPUT);
+
+	if ((gpio_request(IGEP2_GPIO_TVP5151_PDN, "TVP5151 PDN") == 0) &&
+		(gpio_direction_output(IGEP2_GPIO_TVP5151_PDN, 0) == 0))
+		gpio_export(IGEP2_GPIO_TVP5151_PDN, 0);
+	else
+		pr_warning("IGEP: Could not obtain gpio TVP5151 PDN\n");
+
+	if ((gpio_request(IGEP2_GPIO_TVP5151_RESET, "TVP5151 RESET") == 0)
+		&& (gpio_direction_output(IGEP2_GPIO_TVP5151_RESET, 0) == 0)) {
+		gpio_export(IGEP2_GPIO_TVP5151_RESET, 0);
+		/* Initialize TVP5151 power up sequence */
+		udelay(10);
+		gpio_set_value(IGEP2_GPIO_TVP5151_PDN, 1);
+		udelay(10);
+		gpio_set_value(IGEP2_GPIO_TVP5151_RESET, 1);
+		udelay(200);
+	} else
+		pr_warning("IGEP: Could not obtain gpio TVP5151 RESET\n");
+
+	omap_register_i2c_bus(2, 400, NULL, 0);
+}
+
+#ifdef CONFIG_OMAP_MUX
+static struct omap_board_mux igep0022_mux[] __initdata = {
+	/* McSPI 1 */
+	OMAP3_MUX(MCSPI1_CLK, OMAP_MUX_MODE0 | OMAP_PIN_INPUT),
+	OMAP3_MUX(MCSPI1_SIMO, OMAP_MUX_MODE0 | OMAP_PIN_INPUT),
+	OMAP3_MUX(MCSPI1_SOMI, OMAP_MUX_MODE0 | OMAP_PIN_INPUT),
+	{ .reg_offset = OMAP_MUX_TERMINATOR },
+};
+#else
+#define igep0022_mux	NULL
+#endif
+
+static struct omap_mux_partition *partition;
+
+void __init igep0022_init(void)
+{
+	/* Mux initialitzation for igep0022 */
+	partition = omap_mux_get("core");
+	omap_mux_write_array(partition, igep0022_mux);
+
+	/* Register I2C2 bus */
+	igep0022_i2c2_init();
+
+	/* AT24C01 EEPROM with I2C interface */
+	igep00x0_at24c01_init(2);
+
+	/*
+	 * NOTE: Bluetooth UART and PCM voice interface (PCM VSP) is
+	 * INCOMPATIBLE with modem (disabled by default, enable with
+	 * buddy.modem=yes in kernel command line
+	 */
+	if (igep00x0_buddy_pdata.options & IGEP00X0_BUDDY_OPT_MODEM)
+		igep00x0_modem_init(IGEP2_GPIO_MODEM_ON_NOFF,
+			IGEP2_GPIO_MODEM_NRESET, IGEP2_GPIO_MODEM_PWRMON);
+
+	/* Touchscreen interface using ADS7846/TSC2046 SPI1.1 */
+	omap_mux_init_gpio(IGEP2_GPIO_TSC2046_IRQ, OMAP_PIN_INPUT);
+	omap_mux_init_signal("mcspi1_cs1", 0);
+	igep00x0_tsc2046_init(1, 1, IGEP2_GPIO_TSC2046_IRQ, 0);
+
+	/* CAN driver for Microchip 251x CAN Controller with SPI Interface */
+	omap_mux_init_gpio(IGEP2_GPIO_MCP251X_NRESET, OMAP_PIN_INPUT_PULLUP);
+	omap_mux_init_gpio(IGEP2_GPIO_MCP251X_IRQ, OMAP_PIN_INPUT_PULLUP);
+	omap_mux_init_signal("mcspi1_cs0", 0);
+	igep00x0_mcp251x_init(1, 0, IGEP2_GPIO_MCP251X_IRQ,
+				IGEP2_GPIO_MCP251X_NRESET);
+}
+
-- 
1.7.4.1

