From cd4f13c02a5d72e1fc367c51cc0fd955f65538e0 Mon Sep 17 00:00:00 2001
From: Menon, Nishanth <nm@ti.com>
Date: Thu, 22 Jul 2010 16:03:46 -0500
Subject: [PATCH 55/94] staging: tidspbridge: replace CONST with c standard const

Signed-off-by: Nishanth Menon <nm@ti.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/tidspbridge/core/chnl_sm.c         |    4 ++--
 drivers/staging/tidspbridge/core/io_sm.c           |    2 +-
 drivers/staging/tidspbridge/core/msg_sm.c          |    2 +-
 drivers/staging/tidspbridge/core/tiomap3430.c      |    2 +-
 .../staging/tidspbridge/include/dspbridge/chnl.h   |    2 +-
 .../staging/tidspbridge/include/dspbridge/cmm.h    |    2 +-
 .../staging/tidspbridge/include/dspbridge/cod.h    |    2 +-
 .../staging/tidspbridge/include/dspbridge/dev.h    |    8 ++++----
 .../staging/tidspbridge/include/dspbridge/disp.h   |    4 ++--
 .../staging/tidspbridge/include/dspbridge/dmm.h    |    2 +-
 .../tidspbridge/include/dspbridge/dspchnl.h        |    4 ++--
 .../tidspbridge/include/dspbridge/dspdefs.h        |   10 +++++-----
 .../staging/tidspbridge/include/dspbridge/dspio.h  |    2 +-
 .../staging/tidspbridge/include/dspbridge/dspmsg.h |    2 +-
 drivers/staging/tidspbridge/include/dspbridge/io.h |    2 +-
 .../staging/tidspbridge/include/dspbridge/nldr.h   |    4 ++--
 .../tidspbridge/include/dspbridge/nldrdefs.h       |    4 ++--
 .../staging/tidspbridge/include/dspbridge/node.h   |   10 +++++-----
 .../staging/tidspbridge/include/dspbridge/proc.h   |    6 +++---
 .../staging/tidspbridge/include/dspbridge/pwr.h    |    4 ++--
 drivers/staging/tidspbridge/pmgr/chnl.c            |    2 +-
 drivers/staging/tidspbridge/pmgr/cmm.c             |    2 +-
 drivers/staging/tidspbridge/pmgr/cod.c             |    4 ++--
 drivers/staging/tidspbridge/pmgr/dev.c             |    4 ++--
 drivers/staging/tidspbridge/pmgr/dmm.c             |    2 +-
 drivers/staging/tidspbridge/pmgr/dspapi.c          |    2 +-
 drivers/staging/tidspbridge/pmgr/io.c              |    2 +-
 drivers/staging/tidspbridge/rmgr/disp.c            |    4 ++--
 drivers/staging/tidspbridge/rmgr/nldr.c            |    4 ++--
 drivers/staging/tidspbridge/rmgr/node.c            |   14 +++++++-------
 drivers/staging/tidspbridge/rmgr/proc.c            |    8 ++++----
 drivers/staging/tidspbridge/rmgr/pwr.c             |    4 ++--
 32 files changed, 65 insertions(+), 65 deletions(-)

diff --git a/drivers/staging/tidspbridge/core/chnl_sm.c b/drivers/staging/tidspbridge/core/chnl_sm.c
index db106f3..39e9691 100644
--- a/drivers/staging/tidspbridge/core/chnl_sm.c
+++ b/drivers/staging/tidspbridge/core/chnl_sm.c
@@ -383,7 +383,7 @@ func_cont:
  */
 int bridge_chnl_create(OUT struct chnl_mgr **channel_mgr,
 			      struct dev_object *hdev_obj,
-			      IN CONST struct chnl_mgrattrs *mgr_attrts)
+			      IN const struct chnl_mgrattrs *mgr_attrts)
 {
 	int status = 0;
 	struct chnl_mgr *chnl_mgr_obj = NULL;
@@ -777,7 +777,7 @@ int bridge_chnl_idle(struct chnl_object *chnl_obj, u32 timeout,
  */
 int bridge_chnl_open(OUT struct chnl_object **chnl,
 			    struct chnl_mgr *hchnl_mgr, s8 chnl_mode,
-			    u32 ch_id, CONST IN struct chnl_attr *pattrs)
+			    u32 ch_id, const IN struct chnl_attr *pattrs)
 {
 	int status = 0;
 	struct chnl_mgr *chnl_mgr_obj = hchnl_mgr;
diff --git a/drivers/staging/tidspbridge/core/io_sm.c b/drivers/staging/tidspbridge/core/io_sm.c
index 31b623a..27f4481 100644
--- a/drivers/staging/tidspbridge/core/io_sm.c
+++ b/drivers/staging/tidspbridge/core/io_sm.c
@@ -163,7 +163,7 @@ static int register_shm_segs(struct io_mgr *hio_mgr,
  */
 int bridge_io_create(OUT struct io_mgr **io_man,
 			    struct dev_object *hdev_obj,
-			    IN CONST struct io_attrs *mgr_attrts)
+			    IN const struct io_attrs *mgr_attrts)
 {
 	int status = 0;
 	struct io_mgr *pio_mgr = NULL;
diff --git a/drivers/staging/tidspbridge/core/msg_sm.c b/drivers/staging/tidspbridge/core/msg_sm.c
index a86f0ce..6434854 100644
--- a/drivers/staging/tidspbridge/core/msg_sm.c
+++ b/drivers/staging/tidspbridge/core/msg_sm.c
@@ -383,7 +383,7 @@ func_end:
  *      Put a message onto a msg_ctrl queue.
  */
 int bridge_msg_put(struct msg_queue *msg_queue_obj,
-			  IN CONST struct dsp_msg *pmsg, u32 utimeout)
+			  IN const struct dsp_msg *pmsg, u32 utimeout)
 {
 	struct msg_frame *msg_frame_obj;
 	struct msg_mgr *hmsg_mgr;
diff --git a/drivers/staging/tidspbridge/core/tiomap3430.c b/drivers/staging/tidspbridge/core/tiomap3430.c
index 745e1a5..428389b 100644
--- a/drivers/staging/tidspbridge/core/tiomap3430.c
+++ b/drivers/staging/tidspbridge/core/tiomap3430.c
@@ -237,7 +237,7 @@ static void bad_page_dump(u32 pa, struct page *pg)
  *      Bridge Driver entry point.
  */
 void bridge_drv_entry(OUT struct bridge_drv_interface **drv_intf,
-		   IN CONST char *driver_file_name)
+		   IN const char *driver_file_name)
 {
 
 	DBC_REQUIRE(driver_file_name != NULL);
diff --git a/drivers/staging/tidspbridge/include/dspbridge/chnl.h b/drivers/staging/tidspbridge/include/dspbridge/chnl.h
index 4c2020c..96262a3 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/chnl.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/chnl.h
@@ -79,7 +79,7 @@ extern int chnl_close(struct chnl_object *chnl_obj);
  */
 extern int chnl_create(OUT struct chnl_mgr **channel_mgr,
 			      struct dev_object *hdev_obj,
-			      IN CONST struct chnl_mgrattrs *mgr_attrts);
+			      IN const struct chnl_mgrattrs *mgr_attrts);
 
 /*
  *  ======== chnl_destroy ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/cmm.h b/drivers/staging/tidspbridge/include/dspbridge/cmm.h
index 24423cd..a30078d 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/cmm.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/cmm.h
@@ -87,7 +87,7 @@ extern void *cmm_calloc_buf(struct cmm_object *hcmm_mgr,
  */
 extern int cmm_create(OUT struct cmm_object **ph_cmm_mgr,
 			     struct dev_object *hdev_obj,
-			     IN CONST struct cmm_mgrattrs *mgr_attrts);
+			     IN const struct cmm_mgrattrs *mgr_attrts);
 
 /*
  *  ======== cmm_destroy ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/cod.h b/drivers/staging/tidspbridge/include/dspbridge/cod.h
index abf3b38..3c88304 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/cod.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/cod.h
@@ -93,7 +93,7 @@ extern void cod_close(struct cod_libraryobj *lib);
  */
 extern int cod_create(OUT struct cod_manager **mgr,
 			     char *str_zl_file,
-			     IN OPTIONAL CONST struct cod_attrs *attrs);
+			     IN OPTIONAL const struct cod_attrs *attrs);
 
 /*
  *  ======== cod_delete ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dev.h b/drivers/staging/tidspbridge/include/dspbridge/dev.h
index aa89419..94ea446 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dev.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dev.h
@@ -91,7 +91,7 @@ extern u32 dev_brd_write_fxn(void *arb,
  */
 extern int dev_create_device(OUT struct dev_object
 				    **device_obj,
-				    IN CONST char *driver_file_name,
+				    IN const char *driver_file_name,
 				    struct cfg_devnode *dev_node_obj);
 
 /*
@@ -126,8 +126,8 @@ extern int dev_create_device(OUT struct dev_object
  */
 extern int dev_create_iva_device(OUT struct dev_object
 					**device_obj,
-					IN CONST char *driver_file_name,
-					IN CONST struct cfg_hostres
+					IN const char *driver_file_name,
+					IN const struct cfg_hostres
 					*host_config,
 					struct cfg_devnode *dev_node_obj);
 
@@ -490,7 +490,7 @@ extern int dev_get_node_manager(struct dev_object
  *      0:        *pul_value contains the symbol value;
  */
 extern int dev_get_symbol(struct dev_object *hdev_obj,
-				 IN CONST char *str_sym, OUT u32 * pul_value);
+				 IN const char *str_sym, OUT u32 * pul_value);
 
 /*
  *  ======== dev_get_bridge_context ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/disp.h b/drivers/staging/tidspbridge/include/dspbridge/disp.h
index 77fc92e..f89b624 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/disp.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/disp.h
@@ -50,7 +50,7 @@
  */
 extern int disp_create(OUT struct disp_object **dispatch_obj,
 			      struct dev_object *hdev_obj,
-			      IN CONST struct disp_attr *disp_attrs);
+			      IN const struct disp_attr *disp_attrs);
 
 /*
  *  ======== disp_delete ========
@@ -147,7 +147,7 @@ extern int disp_node_create(struct disp_object *disp_obj,
 				   struct node_object *hnode,
 				   u32 rms_fxn,
 				   u32 ul_create_fxn,
-				   IN CONST struct node_createargs
+				   IN const struct node_createargs
 				   *pargs, OUT nodeenv *node_env);
 
 /*
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dmm.h b/drivers/staging/tidspbridge/include/dspbridge/dmm.h
index 8c9a3d4..6f5b18a 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dmm.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dmm.h
@@ -59,7 +59,7 @@ extern int dmm_delete_tables(struct dmm_object *dmm_mgr);
 
 extern int dmm_create(OUT struct dmm_object **dmm_manager,
 			     struct dev_object *hdev_obj,
-			     IN CONST struct dmm_mgrattrs *mgr_attrts);
+			     IN const struct dmm_mgrattrs *mgr_attrts);
 
 extern bool dmm_init(void);
 
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h b/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h
index c08cc00..d8eaf45 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h
@@ -26,7 +26,7 @@
 
 extern int bridge_chnl_create(OUT struct chnl_mgr **channel_mgr,
 				     struct dev_object *hdev_obj,
-				     IN CONST struct chnl_mgrattrs
+				     IN const struct chnl_mgrattrs
 				     *mgr_attrts);
 
 extern int bridge_chnl_destroy(struct chnl_mgr *hchnl_mgr);
@@ -35,7 +35,7 @@ extern int bridge_chnl_open(OUT struct chnl_object **chnl,
 				   struct chnl_mgr *hchnl_mgr,
 				   s8 chnl_mode,
 				   u32 ch_id,
-				   CONST IN OPTIONAL struct chnl_attr
+				   const IN OPTIONAL struct chnl_attr
 				   *pattrs);
 
 extern int bridge_chnl_close(struct chnl_object *chnl_obj);
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h b/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h
index f2830fe..358c523 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h
@@ -327,7 +327,7 @@ typedef int(*fxn_chnl_create) (OUT struct chnl_mgr
 				      **channel_mgr,
 				      struct dev_object
 				      * hdev_obj,
-				      IN CONST struct
+				      IN const struct
 				      chnl_mgrattrs * mgr_attrts);
 
 /*
@@ -412,7 +412,7 @@ typedef int(*fxn_chnl_open) (OUT struct chnl_object
 				    struct chnl_mgr *hchnl_mgr,
 				    s8 chnl_mode,
 				    u32 ch_id,
-				    CONST IN OPTIONAL struct
+				    const IN OPTIONAL struct
 				    chnl_attr * pattrs);
 
 /*
@@ -746,7 +746,7 @@ typedef int(*fxn_dev_destroy) (struct bridge_dev_context *dev_ctxt);
  */
 typedef int(*fxn_io_create) (OUT struct io_mgr **io_man,
 				    struct dev_object *hdev_obj,
-				    IN CONST struct io_attrs *mgr_attrts);
+				    IN const struct io_attrs *mgr_attrts);
 
 /*
  *  ======== bridge_io_destroy ========
@@ -916,7 +916,7 @@ typedef int(*fxn_msg_get) (struct msg_queue *msg_queue_obj,
  *  Ensures:
  */
 typedef int(*fxn_msg_put) (struct msg_queue *msg_queue_obj,
-				  IN CONST struct dsp_msg *pmsg, u32 utimeout);
+				  IN const struct dsp_msg *pmsg, u32 utimeout);
 
 /*
  *  ======== bridge_msg_register_notify ========
@@ -1049,6 +1049,6 @@ struct bridge_drv_interface {
  *      Called during the Device_Init phase.
  */
 void bridge_drv_entry(OUT struct bridge_drv_interface **drv_intf,
-		   IN CONST char *driver_file_name);
+		   IN const char *driver_file_name);
 
 #endif /* DSPDEFS_ */
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspio.h b/drivers/staging/tidspbridge/include/dspbridge/dspio.h
index 2b9e19c..304adab 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dspio.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dspio.h
@@ -28,7 +28,7 @@
 
 extern int bridge_io_create(OUT struct io_mgr **io_man,
 				   struct dev_object *hdev_obj,
-				   IN CONST struct io_attrs *mgr_attrts);
+				   IN const struct io_attrs *mgr_attrts);
 
 extern int bridge_io_destroy(struct io_mgr *hio_mgr);
 
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspmsg.h b/drivers/staging/tidspbridge/include/dspbridge/dspmsg.h
index 6a6c4bf..74cd980 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dspmsg.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dspmsg.h
@@ -42,7 +42,7 @@ extern int bridge_msg_get(struct msg_queue *msg_queue_obj,
 				 struct dsp_msg *pmsg, u32 utimeout);
 
 extern int bridge_msg_put(struct msg_queue *msg_queue_obj,
-				 IN CONST struct dsp_msg *pmsg, u32 utimeout);
+				 IN const struct dsp_msg *pmsg, u32 utimeout);
 
 extern int bridge_msg_register_notify(struct msg_queue *msg_queue_obj,
 					  u32 event_mask,
diff --git a/drivers/staging/tidspbridge/include/dspbridge/io.h b/drivers/staging/tidspbridge/include/dspbridge/io.h
index b8670ca..927e584 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/io.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/io.h
@@ -51,7 +51,7 @@
  */
 extern int io_create(OUT struct io_mgr **io_man,
 			    struct dev_object *hdev_obj,
-			    IN CONST struct io_attrs *mgr_attrts);
+			    IN const struct io_attrs *mgr_attrts);
 
 /*
  *  ======== io_destroy ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/nldr.h b/drivers/staging/tidspbridge/include/dspbridge/nldr.h
index 986ebc8..4b10f13 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/nldr.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/nldr.h
@@ -26,14 +26,14 @@
 #define NLDR_
 
 extern int nldr_allocate(struct nldr_object *nldr_obj,
-				void *priv_ref, IN CONST struct dcd_nodeprops
+				void *priv_ref, IN const struct dcd_nodeprops
 				*node_props,
 				OUT struct nldr_nodeobject **nldr_nodeobj,
 				IN bool *pf_phase_split);
 
 extern int nldr_create(OUT struct nldr_object **nldr,
 			      struct dev_object *hdev_obj,
-			      IN CONST struct nldr_attrs *pattrs);
+			      IN const struct nldr_attrs *pattrs);
 
 extern void nldr_delete(struct nldr_object *nldr_obj);
 extern void nldr_exit(void);
diff --git a/drivers/staging/tidspbridge/include/dspbridge/nldrdefs.h b/drivers/staging/tidspbridge/include/dspbridge/nldrdefs.h
index 9d35114..403a4f3 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/nldrdefs.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/nldrdefs.h
@@ -129,7 +129,7 @@ enum nldr_phase {
  */
 typedef int(*nldr_allocatefxn) (struct nldr_object *nldr_obj,
 				       void *priv_ref,
-				       IN CONST struct dcd_nodeprops
+				       IN const struct dcd_nodeprops
 				       * node_props,
 				       OUT struct nldr_nodeobject
 				       **nldr_nodeobj,
@@ -158,7 +158,7 @@ typedef int(*nldr_allocatefxn) (struct nldr_object *nldr_obj,
  */
 typedef int(*nldr_createfxn) (OUT struct nldr_object **nldr,
 				     struct dev_object *hdev_obj,
-				     IN CONST struct nldr_attrs *pattrs);
+				     IN const struct nldr_attrs *pattrs);
 
 /*
  *  ======== nldr_delete ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/node.h b/drivers/staging/tidspbridge/include/dspbridge/node.h
index d933b27..1ee268c 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/node.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/node.h
@@ -56,9 +56,9 @@
  *      error:              *ph_node == NULL.
  */
 extern int node_allocate(struct proc_object *hprocessor,
-				IN CONST struct dsp_uuid *node_uuid,
-				OPTIONAL IN CONST struct dsp_cbdata
-				*pargs, OPTIONAL IN CONST struct dsp_nodeattrin
+				IN const struct dsp_uuid *node_uuid,
+				OPTIONAL IN const struct dsp_cbdata
+				*pargs, OPTIONAL IN const struct dsp_nodeattrin
 				*attr_in,
 				OUT struct node_object **ph_node,
 				struct process_context *pr_ctxt);
@@ -470,7 +470,7 @@ extern int node_pause(struct node_object *hnode);
  *  Ensures:
  */
 extern int node_put_message(struct node_object *hnode,
-				   IN CONST struct dsp_msg *pmsg, u32 utimeout);
+				   IN const struct dsp_msg *pmsg, u32 utimeout);
 
 /*
  *  ======== node_register_notify ========
@@ -554,7 +554,7 @@ extern int node_terminate(struct node_object *hnode,
  *
  */
 extern int node_get_uuid_props(void *hprocessor,
-				      IN CONST struct dsp_uuid *node_uuid,
+				      IN const struct dsp_uuid *node_uuid,
 				      OUT struct dsp_ndbprops
 				      *node_props);
 
diff --git a/drivers/staging/tidspbridge/include/dspbridge/proc.h b/drivers/staging/tidspbridge/include/dspbridge/proc.h
index f91f11f..6668f25 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/proc.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/proc.h
@@ -52,7 +52,7 @@ extern char *iva_img;
  *      When attr_in is NULL, the default timeout value is 10 seconds.
  */
 extern int proc_attach(u32 processor_id,
-			      OPTIONAL CONST struct dsp_processorattrin
+			      OPTIONAL const struct dsp_processorattrin
 			      *attr_in, void **ph_processor,
 			      struct process_context *pr_ctxt);
 
@@ -329,8 +329,8 @@ extern int proc_get_trace(void *hprocessor, u8 * pbuf, u32 max_size);
  *      can load the processor.
  */
 extern int proc_load(void *hprocessor,
-			    IN CONST s32 argc_index, IN CONST char **user_args,
-			    IN CONST char **user_envp);
+			    IN const s32 argc_index, IN const char **user_args,
+			    IN const char **user_envp);
 
 /*
  *  ======== proc_register_notify ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/pwr.h b/drivers/staging/tidspbridge/include/dspbridge/pwr.h
index 9f32c89..b425792 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/pwr.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/pwr.h
@@ -45,7 +45,7 @@
  *      -EPERM:          General failure, unable to send sleep command to
  *                          the DSP.
  */
-extern int pwr_sleep_dsp(IN CONST u32 sleep_code, IN CONST u32 timeout);
+extern int pwr_sleep_dsp(IN const u32 sleep_code, IN const u32 timeout);
 
 /*
  *  ======== pwr_wake_dsp ========
@@ -66,7 +66,7 @@ extern int pwr_sleep_dsp(IN CONST u32 sleep_code, IN CONST u32 timeout);
  *      -EPERM:          General failure, unable to send wake command to
  *                          the DSP.
  */
-extern int pwr_wake_dsp(IN CONST u32 timeout);
+extern int pwr_wake_dsp(IN const u32 timeout);
 
 /*
  *  ======== pwr_pm_pre_scale ========
diff --git a/drivers/staging/tidspbridge/pmgr/chnl.c b/drivers/staging/tidspbridge/pmgr/chnl.c
index b7ec751..fc99927 100644
--- a/drivers/staging/tidspbridge/pmgr/chnl.c
+++ b/drivers/staging/tidspbridge/pmgr/chnl.c
@@ -53,7 +53,7 @@ static u32 refs;
  */
 int chnl_create(OUT struct chnl_mgr **channel_mgr,
 		       struct dev_object *hdev_obj,
-		       IN CONST struct chnl_mgrattrs *mgr_attrts)
+		       IN const struct chnl_mgrattrs *mgr_attrts)
 {
 	int status;
 	struct chnl_mgr *hchnl_mgr;
diff --git a/drivers/staging/tidspbridge/pmgr/cmm.c b/drivers/staging/tidspbridge/pmgr/cmm.c
index ca705da..36ba9cb 100644
--- a/drivers/staging/tidspbridge/pmgr/cmm.c
+++ b/drivers/staging/tidspbridge/pmgr/cmm.c
@@ -242,7 +242,7 @@ void *cmm_calloc_buf(struct cmm_object *hcmm_mgr, u32 usize,
  */
 int cmm_create(OUT struct cmm_object **ph_cmm_mgr,
 		      struct dev_object *hdev_obj,
-		      IN CONST struct cmm_mgrattrs *mgr_attrts)
+		      IN const struct cmm_mgrattrs *mgr_attrts)
 {
 	struct cmm_object *cmm_obj = NULL;
 	int status = 0;
diff --git a/drivers/staging/tidspbridge/pmgr/cod.c b/drivers/staging/tidspbridge/pmgr/cod.c
index f324130..bf8c909 100644
--- a/drivers/staging/tidspbridge/pmgr/cod.c
+++ b/drivers/staging/tidspbridge/pmgr/cod.c
@@ -110,7 +110,7 @@ static s32 cod_f_close(struct file *filp)
 	return 0;
 }
 
-static struct file *cod_f_open(CONST char *psz_file_name, CONST char *sz_mode)
+static struct file *cod_f_open(const char *psz_file_name, const char *sz_mode)
 {
 	mm_segment_t fs;
 	struct file *filp;
@@ -217,7 +217,7 @@ void cod_close(struct cod_libraryobj *lib)
  *
  */
 int cod_create(OUT struct cod_manager **mgr, char *str_zl_file,
-		      IN OPTIONAL CONST struct cod_attrs *attrs)
+		      IN OPTIONAL const struct cod_attrs *attrs)
 {
 	struct cod_manager *mgr_new;
 	struct dbll_attrs zl_attrs;
diff --git a/drivers/staging/tidspbridge/pmgr/dev.c b/drivers/staging/tidspbridge/pmgr/dev.c
index 31ff15d..c726cf8 100644
--- a/drivers/staging/tidspbridge/pmgr/dev.c
+++ b/drivers/staging/tidspbridge/pmgr/dev.c
@@ -132,7 +132,7 @@ u32 dev_brd_write_fxn(void *arb, u32 dsp_add, void *host_buf,
  *      PM board (device).
  */
 int dev_create_device(OUT struct dev_object **device_obj,
-			     IN CONST char *driver_file_name,
+			     IN const char *driver_file_name,
 			     struct cfg_devnode *dev_node_obj)
 {
 	struct cfg_hostres *host_res;
@@ -691,7 +691,7 @@ int dev_get_node_manager(struct dev_object *hdev_obj,
  *  ======== dev_get_symbol ========
  */
 int dev_get_symbol(struct dev_object *hdev_obj,
-			  IN CONST char *str_sym, OUT u32 * pul_value)
+			  IN const char *str_sym, OUT u32 * pul_value)
 {
 	int status = 0;
 	struct cod_manager *cod_mgr;
diff --git a/drivers/staging/tidspbridge/pmgr/dmm.c b/drivers/staging/tidspbridge/pmgr/dmm.c
index 2d8c9e2..592b5e7 100644
--- a/drivers/staging/tidspbridge/pmgr/dmm.c
+++ b/drivers/staging/tidspbridge/pmgr/dmm.c
@@ -119,7 +119,7 @@ int dmm_create_tables(struct dmm_object *dmm_mgr, u32 addr, u32 size)
  */
 int dmm_create(OUT struct dmm_object **dmm_manager,
 		      struct dev_object *hdev_obj,
-		      IN CONST struct dmm_mgrattrs *mgr_attrts)
+		      IN const struct dmm_mgrattrs *mgr_attrts)
 {
 	struct dmm_object *dmm_obj = NULL;
 	int status = 0;
diff --git a/drivers/staging/tidspbridge/pmgr/dspapi.c b/drivers/staging/tidspbridge/pmgr/dspapi.c
index 57abe33..f171567 100644
--- a/drivers/staging/tidspbridge/pmgr/dspapi.c
+++ b/drivers/staging/tidspbridge/pmgr/dspapi.c
@@ -905,7 +905,7 @@ u32 procwrap_load(union trapped_args *args, void *pr_ctxt)
 	if (DSP_SUCCEEDED(status)) {
 		status = proc_load(args->args_proc_load.hprocessor,
 				   args->args_proc_load.argc_index,
-				   (CONST char **)argv, (CONST char **)envp);
+				   (const char **)argv, (const char **)envp);
 	}
 func_cont:
 	if (envp) {
diff --git a/drivers/staging/tidspbridge/pmgr/io.c b/drivers/staging/tidspbridge/pmgr/io.c
index 96ff8ad..c422bb4 100644
--- a/drivers/staging/tidspbridge/pmgr/io.c
+++ b/drivers/staging/tidspbridge/pmgr/io.c
@@ -47,7 +47,7 @@ static u32 refs;
  *      CHNL and msg_ctrl
  */
 int io_create(OUT struct io_mgr **io_man, struct dev_object *hdev_obj,
-		     IN CONST struct io_attrs *mgr_attrts)
+		     IN const struct io_attrs *mgr_attrts)
 {
 	struct bridge_drv_interface *intf_fxns;
 	struct io_mgr *hio_mgr = NULL;
diff --git a/drivers/staging/tidspbridge/rmgr/disp.c b/drivers/staging/tidspbridge/rmgr/disp.c
index 2aedf0d..56d6429 100644
--- a/drivers/staging/tidspbridge/rmgr/disp.c
+++ b/drivers/staging/tidspbridge/rmgr/disp.c
@@ -89,7 +89,7 @@ static int send_message(struct disp_object *disp_obj, u32 timeout,
  */
 int disp_create(OUT struct disp_object **dispatch_obj,
 		       struct dev_object *hdev_obj,
-		       IN CONST struct disp_attr *disp_attrs)
+		       IN const struct disp_attr *disp_attrs)
 {
 	struct disp_object *disp_obj;
 	struct bridge_drv_interface *intf_fxns;
@@ -251,7 +251,7 @@ int disp_node_change_priority(struct disp_object *disp_obj,
 int disp_node_create(struct disp_object *disp_obj,
 			    struct node_object *hnode, u32 rms_fxn,
 			    u32 ul_create_fxn,
-			    IN CONST struct node_createargs *pargs,
+			    IN const struct node_createargs *pargs,
 			    OUT nodeenv *node_env)
 {
 	struct node_msgargs node_msg_args;
diff --git a/drivers/staging/tidspbridge/rmgr/nldr.c b/drivers/staging/tidspbridge/rmgr/nldr.c
index 1df1fc4..83b5b6e 100644
--- a/drivers/staging/tidspbridge/rmgr/nldr.c
+++ b/drivers/staging/tidspbridge/rmgr/nldr.c
@@ -325,7 +325,7 @@ static u32 find_gcf(u32 a, u32 b);
  *  ======== nldr_allocate ========
  */
 int nldr_allocate(struct nldr_object *nldr_obj, void *priv_ref,
-			 IN CONST struct dcd_nodeprops *node_props,
+			 IN const struct dcd_nodeprops *node_props,
 			 OUT struct nldr_nodeobject **nldr_nodeobj,
 			 IN bool *pf_phase_split)
 {
@@ -427,7 +427,7 @@ int nldr_allocate(struct nldr_object *nldr_obj, void *priv_ref,
  */
 int nldr_create(OUT struct nldr_object **nldr,
 		       struct dev_object *hdev_obj,
-		       IN CONST struct nldr_attrs *pattrs)
+		       IN const struct nldr_attrs *pattrs)
 {
 	struct cod_manager *cod_mgr;	/* COD manager */
 	char *psz_coff_buf = NULL;
diff --git a/drivers/staging/tidspbridge/rmgr/node.c b/drivers/staging/tidspbridge/rmgr/node.c
index 6bb65ea..ba18e58 100644
--- a/drivers/staging/tidspbridge/rmgr/node.c
+++ b/drivers/staging/tidspbridge/rmgr/node.c
@@ -252,7 +252,7 @@ static int get_fxn_address(struct node_object *hnode, u32 * fxn_addr,
 				  u32 phase);
 static int get_node_props(struct dcd_manager *hdcd_mgr,
 				 struct node_object *hnode,
-				 CONST struct dsp_uuid *node_uuid,
+				 const struct dsp_uuid *node_uuid,
 				 struct dcd_genericobj *dcd_prop);
 static int get_proc_props(struct node_mgr *hnode_mgr,
 				 struct dev_object *hdev_obj);
@@ -291,9 +291,9 @@ enum node_state node_get_state(void *hnode)
  *      Allocate GPP resources to manage a node on the DSP.
  */
 int node_allocate(struct proc_object *hprocessor,
-			 IN CONST struct dsp_uuid *node_uuid,
-			 OPTIONAL IN CONST struct dsp_cbdata *pargs,
-			 OPTIONAL IN CONST struct dsp_nodeattrin *attr_in,
+			 IN const struct dsp_uuid *node_uuid,
+			 OPTIONAL IN const struct dsp_cbdata *pargs,
+			 OPTIONAL IN const struct dsp_nodeattrin *attr_in,
 			 OUT struct node_object **ph_node,
 			 struct process_context *pr_ctxt)
 {
@@ -2094,7 +2094,7 @@ func_end:
  *      message, or a timeout occurs.
  */
 int node_put_message(struct node_object *hnode,
-			    IN CONST struct dsp_msg *pmsg, u32 utimeout)
+			    IN const struct dsp_msg *pmsg, u32 utimeout)
 {
 	struct node_mgr *hnode_mgr = NULL;
 	enum node_type node_type;
@@ -2888,7 +2888,7 @@ void get_node_info(struct node_object *hnode, struct dsp_nodeinfo *node_info)
  */
 static int get_node_props(struct dcd_manager *hdcd_mgr,
 				 struct node_object *hnode,
-				 CONST struct dsp_uuid *node_uuid,
+				 const struct dsp_uuid *node_uuid,
 				 struct dcd_genericobj *dcd_prop)
 {
 	u32 len;
@@ -3004,7 +3004,7 @@ static int get_proc_props(struct node_mgr *hnode_mgr,
  *      Fetch Node UUID properties from DCD/DOF file.
  */
 int node_get_uuid_props(void *hprocessor,
-			       IN CONST struct dsp_uuid *node_uuid,
+			       IN const struct dsp_uuid *node_uuid,
 			       OUT struct dsp_ndbprops *node_props)
 {
 	struct node_mgr *hnode_mgr = NULL;
diff --git a/drivers/staging/tidspbridge/rmgr/proc.c b/drivers/staging/tidspbridge/rmgr/proc.c
index 79f0c9d..e18c098 100644
--- a/drivers/staging/tidspbridge/rmgr/proc.c
+++ b/drivers/staging/tidspbridge/rmgr/proc.c
@@ -272,7 +272,7 @@ static inline struct page *get_mapping_page(struct dmm_map_object *map_obj,
  */
 int
 proc_attach(u32 processor_id,
-	    OPTIONAL CONST struct dsp_processorattrin *attr_in,
+	    OPTIONAL const struct dsp_processorattrin *attr_in,
 	    void **ph_processor, struct process_context *pr_ctxt)
 {
 	int status = 0;
@@ -469,7 +469,7 @@ int proc_auto_start(struct cfg_devnode *dev_node_obj,
 		argv[0] = sz_exec_file;
 		argv[1] = NULL;
 		/* ...and try to load it: */
-		status = proc_load(p_proc_object, 1, (CONST char **)argv, NULL);
+		status = proc_load(p_proc_object, 1, (const char **)argv, NULL);
 		if (DSP_SUCCEEDED(status))
 			status = proc_start(p_proc_object);
 	}
@@ -1055,8 +1055,8 @@ bool proc_init(void)
  *      This will be an OEM-only function, and not part of the DSP/BIOS Bridge
  *      application developer's API.
  */
-int proc_load(void *hprocessor, IN CONST s32 argc_index,
-		     IN CONST char **user_args, IN CONST char **user_envp)
+int proc_load(void *hprocessor, IN const s32 argc_index,
+		     IN const char **user_args, IN const char **user_envp)
 {
 	int status = 0;
 	struct proc_object *p_proc_object = (struct proc_object *)hprocessor;
diff --git a/drivers/staging/tidspbridge/rmgr/pwr.c b/drivers/staging/tidspbridge/rmgr/pwr.c
index 2d81743..2884502 100644
--- a/drivers/staging/tidspbridge/rmgr/pwr.c
+++ b/drivers/staging/tidspbridge/rmgr/pwr.c
@@ -36,7 +36,7 @@
  *  ======== pwr_sleep_dsp ========
  *    Send command to DSP to enter sleep state.
  */
-int pwr_sleep_dsp(IN CONST u32 sleep_code, IN CONST u32 timeout)
+int pwr_sleep_dsp(IN const u32 sleep_code, IN const u32 timeout)
 {
 	struct bridge_drv_interface *intf_fxns;
 	struct bridge_dev_context *dw_context;
@@ -79,7 +79,7 @@ int pwr_sleep_dsp(IN CONST u32 sleep_code, IN CONST u32 timeout)
  *  ======== pwr_wake_dsp ========
  *    Send command to DSP to wake it from sleep.
  */
-int pwr_wake_dsp(IN CONST u32 timeout)
+int pwr_wake_dsp(IN const u32 timeout)
 {
 	struct bridge_drv_interface *intf_fxns;
 	struct bridge_dev_context *dw_context;
-- 
1.7.0.4

