From 21aaf42ec990e7e169fff67ffb97b2f13e0b7ed3 Mon Sep 17 00:00:00 2001
From: Menon, Nishanth <nm@ti.com>
Date: Thu, 22 Jul 2010 16:03:48 -0500
Subject: [PATCH 057/116] staging: tidspbridge: remove OPTIONAL

OPTIONAL modifier makes no sense in linux kernel

Signed-off-by: Nishanth Menon <nm@ti.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/tidspbridge/core/chnl_sm.c         |    2 +-
 .../staging/tidspbridge/include/dspbridge/cod.h    |    2 +-
 .../tidspbridge/include/dspbridge/dspchnl.h        |    4 ++--
 .../tidspbridge/include/dspbridge/dspdefs.h        |    4 ++--
 .../staging/tidspbridge/include/dspbridge/node.h   |   12 ++++++------
 .../staging/tidspbridge/include/dspbridge/proc.h   |    2 +-
 drivers/staging/tidspbridge/pmgr/cod.c             |    2 +-
 drivers/staging/tidspbridge/rmgr/dbdcd.c           |   12 ++++++------
 drivers/staging/tidspbridge/rmgr/nldr.c            |    6 +++---
 drivers/staging/tidspbridge/rmgr/node.c            |   12 ++++++------
 drivers/staging/tidspbridge/rmgr/proc.c            |    2 +-
 11 files changed, 30 insertions(+), 30 deletions(-)

diff --git a/drivers/staging/tidspbridge/core/chnl_sm.c b/drivers/staging/tidspbridge/core/chnl_sm.c
index 01d4a22..7640547 100644
--- a/drivers/staging/tidspbridge/core/chnl_sm.c
+++ b/drivers/staging/tidspbridge/core/chnl_sm.c
@@ -91,7 +91,7 @@ static int search_free_channel(struct chnl_mgr *chnl_mgr_obj,
  */
 int bridge_chnl_add_io_req(struct chnl_object *chnl_obj, void *host_buf,
 			       u32 byte_size, u32 buf_size,
-			       OPTIONAL u32 dw_dsp_addr, u32 dw_arg)
+			       u32 dw_dsp_addr, u32 dw_arg)
 {
 	int status = 0;
 	struct chnl_object *pchnl = (struct chnl_object *)chnl_obj;
diff --git a/drivers/staging/tidspbridge/include/dspbridge/cod.h b/drivers/staging/tidspbridge/include/dspbridge/cod.h
index 6f01c62..f2d205c 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/cod.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/cod.h
@@ -93,7 +93,7 @@ extern void cod_close(struct cod_libraryobj *lib);
  */
 extern int cod_create(OUT struct cod_manager **mgr,
 			     char *str_zl_file,
-			     OPTIONAL const struct cod_attrs *attrs);
+			     const struct cod_attrs *attrs);
 
 /*
  *  ======== cod_delete ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h b/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h
index 9f489a5..3f56222 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dspchnl.h
@@ -35,7 +35,7 @@ extern int bridge_chnl_open(OUT struct chnl_object **chnl,
 				   struct chnl_mgr *hchnl_mgr,
 				   s8 chnl_mode,
 				   u32 ch_id,
-				   const OPTIONAL struct chnl_attr
+				   const struct chnl_attr
 				   *pattrs);
 
 extern int bridge_chnl_close(struct chnl_object *chnl_obj);
@@ -43,7 +43,7 @@ extern int bridge_chnl_close(struct chnl_object *chnl_obj);
 extern int bridge_chnl_add_io_req(struct chnl_object *chnl_obj,
 				      void *host_buf,
 				      u32 byte_size, u32 buf_size,
-				      OPTIONAL u32 dw_dsp_addr, u32 dw_arg);
+				      u32 dw_dsp_addr, u32 dw_arg);
 
 extern int bridge_chnl_get_ioc(struct chnl_object *chnl_obj,
 				   u32 timeout, OUT struct chnl_ioc *chan_ioc);
diff --git a/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h b/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h
index ea0ed0a..ea1124c 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/dspdefs.h
@@ -412,7 +412,7 @@ typedef int(*fxn_chnl_open) (OUT struct chnl_object
 				    struct chnl_mgr *hchnl_mgr,
 				    s8 chnl_mode,
 				    u32 ch_id,
-				    const OPTIONAL struct
+				    const struct
 				    chnl_attr * pattrs);
 
 /*
@@ -475,7 +475,7 @@ typedef int(*fxn_chnl_addioreq) (struct chnl_object
 					void *host_buf,
 					u32 byte_size,
 					u32 buf_size,
-					OPTIONAL u32 dw_dsp_addr, u32 dw_arg);
+					u32 dw_dsp_addr, u32 dw_arg);
 
 /*
  *  ======== bridge_chnl_get_ioc ========
diff --git a/drivers/staging/tidspbridge/include/dspbridge/node.h b/drivers/staging/tidspbridge/include/dspbridge/node.h
index 44c0da2..b226c87 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/node.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/node.h
@@ -57,8 +57,8 @@
  */
 extern int node_allocate(struct proc_object *hprocessor,
 				const struct dsp_uuid *node_uuid,
-				OPTIONAL const struct dsp_cbdata
-				*pargs, OPTIONAL const struct dsp_nodeattrin
+				const struct dsp_cbdata
+				*pargs, const struct dsp_nodeattrin
 				*attr_in,
 				OUT struct node_object **ph_node,
 				struct process_context *pr_ctxt);
@@ -86,7 +86,7 @@ extern int node_allocate(struct proc_object *hprocessor,
  *  Ensures:
  */
 extern int node_alloc_msg_buf(struct node_object *hnode,
-				     u32 usize, OPTIONAL struct dsp_bufferattr
+				     u32 usize, struct dsp_bufferattr
 				     *pattr, OUT u8 **pbuffer);
 
 /*
@@ -182,8 +182,8 @@ extern int node_connect(struct node_object *node1,
 			       u32 stream1,
 			       struct node_object *node2,
 			       u32 stream2,
-			       OPTIONAL struct dsp_strmattr *pattrs,
-			       OPTIONAL struct dsp_cbdata
+			       struct dsp_strmattr *pattrs,
+			       struct dsp_cbdata
 			       *conn_param);
 
 /*
@@ -335,7 +335,7 @@ extern void node_exit(void);
  */
 extern int node_free_msg_buf(struct node_object *hnode,
 				    u8 *pbuffer,
-				    OPTIONAL struct dsp_bufferattr
+				    struct dsp_bufferattr
 				    *pattr);
 
 /*
diff --git a/drivers/staging/tidspbridge/include/dspbridge/proc.h b/drivers/staging/tidspbridge/include/dspbridge/proc.h
index 01e597a..c872f63 100644
--- a/drivers/staging/tidspbridge/include/dspbridge/proc.h
+++ b/drivers/staging/tidspbridge/include/dspbridge/proc.h
@@ -52,7 +52,7 @@ extern char *iva_img;
  *      When attr_in is NULL, the default timeout value is 10 seconds.
  */
 extern int proc_attach(u32 processor_id,
-			      OPTIONAL const struct dsp_processorattrin
+			      const struct dsp_processorattrin
 			      *attr_in, void **ph_processor,
 			      struct process_context *pr_ctxt);
 
diff --git a/drivers/staging/tidspbridge/pmgr/cod.c b/drivers/staging/tidspbridge/pmgr/cod.c
index a5c5a3a..d25f8ce 100644
--- a/drivers/staging/tidspbridge/pmgr/cod.c
+++ b/drivers/staging/tidspbridge/pmgr/cod.c
@@ -217,7 +217,7 @@ void cod_close(struct cod_libraryobj *lib)
  *
  */
 int cod_create(OUT struct cod_manager **mgr, char *str_zl_file,
-		      OPTIONAL const struct cod_attrs *attrs)
+		      const struct cod_attrs *attrs)
 {
 	struct cod_manager *mgr_new;
 	struct dbll_attrs zl_attrs;
diff --git a/drivers/staging/tidspbridge/rmgr/dbdcd.c b/drivers/staging/tidspbridge/rmgr/dbdcd.c
index 0281eb2..c89db0e 100644
--- a/drivers/staging/tidspbridge/rmgr/dbdcd.c
+++ b/drivers/staging/tidspbridge/rmgr/dbdcd.c
@@ -70,9 +70,9 @@ static char dsp_char2_gpp_char(char *word, s32 dsp_char_size);
 static int get_dep_lib_info(struct dcd_manager *hdcd_mgr,
 				   struct dsp_uuid *uuid_obj,
 				   OUT u16 *num_libs,
-				   OPTIONAL OUT u16 *num_pers_libs,
-				   OPTIONAL OUT struct dsp_uuid *dep_lib_uuids,
-				   OPTIONAL OUT bool *prstnt_dep_libs,
+				   OUT u16 *num_pers_libs,
+				   OUT struct dsp_uuid *dep_lib_uuids,
+				   OUT bool *prstnt_dep_libs,
 				   enum nldr_phase phase);
 
 /*
@@ -1394,9 +1394,9 @@ static char dsp_char2_gpp_char(char *word, s32 dsp_char_size)
 static int get_dep_lib_info(struct dcd_manager *hdcd_mgr,
 				   struct dsp_uuid *uuid_obj,
 				   OUT u16 *num_libs,
-				   OPTIONAL OUT u16 *num_pers_libs,
-				   OPTIONAL OUT struct dsp_uuid *dep_lib_uuids,
-				   OPTIONAL OUT bool *prstnt_dep_libs,
+				   OUT u16 *num_pers_libs,
+				   OUT struct dsp_uuid *dep_lib_uuids,
+				   OUT bool *prstnt_dep_libs,
 				   enum nldr_phase phase)
 {
 	struct dcd_manager *dcd_mgr_obj = hdcd_mgr;
diff --git a/drivers/staging/tidspbridge/rmgr/nldr.c b/drivers/staging/tidspbridge/rmgr/nldr.c
index 1215f63..e35ee7d 100644
--- a/drivers/staging/tidspbridge/rmgr/nldr.c
+++ b/drivers/staging/tidspbridge/rmgr/nldr.c
@@ -307,8 +307,8 @@ static int load_ovly(struct nldr_nodeobject *nldr_node_obj,
 			    enum nldr_phase phase);
 static int remote_alloc(void **ref, u16 mem_sect, u32 size,
 			       u32 align, u32 *dsp_address,
-			       OPTIONAL s32 segmnt_id,
-			       OPTIONAL s32 req, bool reserve);
+			       s32 segmnt_id,
+			       s32 req, bool reserve);
 static int remote_free(void **ref, u16 space, u32 dsp_address, u32 size,
 			      bool reserve);
 
@@ -1630,7 +1630,7 @@ func_end:
  */
 static int remote_alloc(void **ref, u16 mem_sect, u32 size,
 			       u32 align, u32 *dsp_address,
-			       OPTIONAL s32 segmnt_id, OPTIONAL s32 req,
+			       s32 segmnt_id, s32 req,
 			       bool reserve)
 {
 	struct nldr_nodeobject *hnode = (struct nldr_nodeobject *)ref;
diff --git a/drivers/staging/tidspbridge/rmgr/node.c b/drivers/staging/tidspbridge/rmgr/node.c
index bb66959..069ee9e 100644
--- a/drivers/staging/tidspbridge/rmgr/node.c
+++ b/drivers/staging/tidspbridge/rmgr/node.c
@@ -292,8 +292,8 @@ enum node_state node_get_state(void *hnode)
  */
 int node_allocate(struct proc_object *hprocessor,
 			 const struct dsp_uuid *node_uuid,
-			 OPTIONAL const struct dsp_cbdata *pargs,
-			 OPTIONAL const struct dsp_nodeattrin *attr_in,
+			 const struct dsp_cbdata *pargs,
+			 const struct dsp_nodeattrin *attr_in,
 			 OUT struct node_object **ph_node,
 			 struct process_context *pr_ctxt)
 {
@@ -685,7 +685,7 @@ func_end:
  *      Allocates buffer for zero copy messaging.
  */
 DBAPI node_alloc_msg_buf(struct node_object *hnode, u32 usize,
-			 OPTIONAL OUT struct dsp_bufferattr *pattr,
+			 OUT struct dsp_bufferattr *pattr,
 			 OUT u8 **pbuffer)
 {
 	struct node_object *pnode = (struct node_object *)hnode;
@@ -833,8 +833,8 @@ func_end:
  */
 int node_connect(struct node_object *node1, u32 stream1,
 			struct node_object *node2,
-			u32 stream2, OPTIONAL struct dsp_strmattr *pattrs,
-			OPTIONAL struct dsp_cbdata *conn_param)
+			u32 stream2, struct dsp_strmattr *pattrs,
+			struct dsp_cbdata *conn_param)
 {
 	struct node_mgr *hnode_mgr;
 	char *pstr_dev_name = NULL;
@@ -1674,7 +1674,7 @@ void node_exit(void)
  *      Frees the message buffer.
  */
 int node_free_msg_buf(struct node_object *hnode, u8 * pbuffer,
-			     OPTIONAL struct dsp_bufferattr *pattr)
+			     struct dsp_bufferattr *pattr)
 {
 	struct node_object *pnode = (struct node_object *)hnode;
 	int status = 0;
diff --git a/drivers/staging/tidspbridge/rmgr/proc.c b/drivers/staging/tidspbridge/rmgr/proc.c
index c1559ee..be137ad 100644
--- a/drivers/staging/tidspbridge/rmgr/proc.c
+++ b/drivers/staging/tidspbridge/rmgr/proc.c
@@ -272,7 +272,7 @@ static inline struct page *get_mapping_page(struct dmm_map_object *map_obj,
  */
 int
 proc_attach(u32 processor_id,
-	    OPTIONAL const struct dsp_processorattrin *attr_in,
+	    const struct dsp_processorattrin *attr_in,
 	    void **ph_processor, struct process_context *pr_ctxt)
 {
 	int status = 0;
-- 
1.7.1

