From 0ed2bd544bc39c20d4657b8a91785a06335450ef Mon Sep 17 00:00:00 2001
From: Shivananda Hebbar <x0hebbar@ti.com>
Date: Mon, 19 Apr 2010 18:15:43 -0500
Subject: [PATCH 059/135] DSPBRIDGE: replace error code DSP_ENODETYPE for -EPERM

This patch replaces DSP_ENODETYPE with -EPERM.

Signed-off-by: Shivananda Hebbar <x0hebbar@ti.com>
---
 arch/arm/plat-omap/include/dspbridge/node.h     |   12 ++++++------
 arch/arm/plat-omap/include/dspbridge/nodepriv.h |    2 +-
 arch/arm/plat-omap/include/dspbridge/strm.h     |    2 +-
 drivers/dsp/bridge/rmgr/node.c                  |   16 ++++++++--------
 drivers/dsp/bridge/wmd/msg_sm.c                 |    2 +-
 5 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/arch/arm/plat-omap/include/dspbridge/node.h b/arch/arm/plat-omap/include/dspbridge/node.h
index 1dd7217..17c164e 100644
--- a/arch/arm/plat-omap/include/dspbridge/node.h
+++ b/arch/arm/plat-omap/include/dspbridge/node.h
@@ -100,7 +100,7 @@ extern dsp_status node_alloc_msg_buf(struct node_object *hnode,
  *      DSP_SOK:            Success.
  *      DSP_EHANDLE:        Invalid hnode.
  *      -EDOM:         prio is out of range.
- *      DSP_ENODETYPE:      The specified node is not a task node.
+ *      -EPERM:      The specified node is not a task node.
  *      DSP_EWRONGSTATE:    Node is not in the NODE_ALLOCATED, NODE_PAUSED,
  *                          or NODE_RUNNING state.
  *      -ETIME:       A timeout occurred before the DSP responded.
@@ -382,7 +382,7 @@ extern dsp_status node_get_attr(struct node_object *hnode,
  *  Returns:
  *      DSP_SOK:        Success.
  *      DSP_EHANDLE:    Invalid hnode.
- *      DSP_ENODETYPE:  Cannot retrieve messages from this type of node.
+ *      -EPERM:  Cannot retrieve messages from this type of node.
  *      -ETIME:   Timeout occurred and no message is available.
  *      -EPERM:      Error occurred while trying to retrieve a message.
  *  Requires:
@@ -443,7 +443,7 @@ void node_on_exit(struct node_object *hnode, s32 nStatus);
  *  Returns:
  *      DSP_SOK:            Success.
  *      DSP_EHANDLE:        Invalid hnode.
- *      DSP_ENODETYPE:      Node is not a task or socket node.
+ *      -EPERM:      Node is not a task or socket node.
  *      -ETIME:       A timeout occurred before the DSP responded.
  *      DSP_EWRONGSTSATE:   Node is not in NODE_RUNNING state.
  *      -EPERM:          Failed to pause node.
@@ -467,7 +467,7 @@ extern dsp_status node_pause(struct node_object *hnode);
  *  Returns:
  *      DSP_SOK:            Success.
  *      DSP_EHANDLE:        Invalid hnode.
- *      DSP_ENODETYPE:      Messages can't be sent to this type of node.
+ *      -EPERM:      Messages can't be sent to this type of node.
  *      -ETIME:       Timeout occurred before message could be set.
  *      DSP_EWRONGSTATE:    Node is in invalid state for sending messages.
  *      -EPERM:          Unable to send message.
@@ -517,7 +517,7 @@ extern dsp_status node_register_notify(struct node_object *hnode,
  *  Returns:
  *      DSP_SOK:            Success.
  *      DSP_EHANDLE:        Invalid hnode.
- *      DSP_ENODETYPE:      hnode doesn't represent a message, task or dais
+ *      -EPERM:      hnode doesn't represent a message, task or dais
  *                          socket node.
  *      -ETIME:       A timeout occurred before the DSP responded.
  *      DSP_EWRONGSTSATE:   Node is not in NODE_PAUSED or NODE_CREATED state.
@@ -543,7 +543,7 @@ extern dsp_status node_run(struct node_object *hnode);
  *      DSP_SOK:            Success.
  *      DSP_EHANDLE:        Invalid hnode.
  *      -ETIME:       A timeout occurred before the DSP responded.
- *      DSP_ENODETYPE:      Type of node specified cannot be terminated.
+ *      -EPERM:      Type of node specified cannot be terminated.
  *      DSP_EWRONGSTATE:    Operation not valid for the current node state.
  *      -EPERM:          Unable to terminate the node.
  *  Requires:
diff --git a/arch/arm/plat-omap/include/dspbridge/nodepriv.h b/arch/arm/plat-omap/include/dspbridge/nodepriv.h
index cf67f41..84e572d 100644
--- a/arch/arm/plat-omap/include/dspbridge/nodepriv.h
+++ b/arch/arm/plat-omap/include/dspbridge/nodepriv.h
@@ -92,7 +92,7 @@ struct node_createargs {
  *  Returns:
  *      DSP_SOK:        Success.
  *      DSP_EHANDLE:    Invalid hnode.
- *      DSP_ENODETYPE:  Not a task or DAIS socket node.
+ *      -EPERM:  Not a task or DAIS socket node.
  *      -EINVAL:     The node's stream corresponding to index and dir
  *                      is not a stream to or from the host.
  *  Requires:
diff --git a/arch/arm/plat-omap/include/dspbridge/strm.h b/arch/arm/plat-omap/include/dspbridge/strm.h
index 43afc1c..4305cb8 100644
--- a/arch/arm/plat-omap/include/dspbridge/strm.h
+++ b/arch/arm/plat-omap/include/dspbridge/strm.h
@@ -261,7 +261,7 @@ extern dsp_status strm_issue(struct strm_object *hStrm, IN u8 * pbuf,
  *      DSP_EHANDLE:    Invalid hnode.
  *      -EPERM: Invalid dir.
  *      -EINVAL:     Invalid index.
- *      DSP_ENODETYPE:  hnode is not a task or DAIS socket node.
+ *      -EPERM:  hnode is not a task or DAIS socket node.
  *      -EPERM:      Unable to open stream.
  *  Requires:
  *      strm_init(void) called.
diff --git a/drivers/dsp/bridge/rmgr/node.c b/drivers/dsp/bridge/rmgr/node.c
index 59eb17b..e39c555 100644
--- a/drivers/dsp/bridge/rmgr/node.c
+++ b/drivers/dsp/bridge/rmgr/node.c
@@ -703,7 +703,7 @@ DBAPI node_alloc_msg_buf(struct node_object *hnode, u32 usize,
 	if (!MEM_IS_VALID_HANDLE(pnode, NODE_SIGNATURE))
 		status = DSP_EHANDLE;
 	else if (node_get_type(pnode) == NODE_DEVICE)
-		status = DSP_ENODETYPE;
+		status = -EPERM;
 
 	if (DSP_FAILED(status))
 		goto func_end;
@@ -789,7 +789,7 @@ dsp_status node_change_priority(struct node_object *hnode, s32 prio)
 		hnode_mgr = hnode->hnode_mgr;
 		node_type = node_get_type(hnode);
 		if (node_type != NODE_TASK && node_type != NODE_DAISSOCKET)
-			status = DSP_ENODETYPE;
+			status = -EPERM;
 		else if (prio < hnode_mgr->min_pri || prio > hnode_mgr->max_pri)
 			status = -EDOM;
 	}
@@ -1780,7 +1780,7 @@ dsp_status node_get_channel_id(struct node_object *hnode, u32 dir, u32 index,
 	}
 	node_type = node_get_type(hnode);
 	if (node_type != NODE_TASK && node_type != NODE_DAISSOCKET) {
-		status = DSP_ENODETYPE;
+		status = -EPERM;
 		return status;
 	}
 	if (dir == DSP_TONODE) {
@@ -1840,7 +1840,7 @@ dsp_status node_get_message(struct node_object *hnode,
 	node_type = node_get_type(hnode);
 	if (node_type != NODE_MESSAGE && node_type != NODE_TASK &&
 	    node_type != NODE_DAISSOCKET) {
-		status = DSP_ENODETYPE;
+		status = -EPERM;
 		goto func_end;
 	}
 	/*  This function will block unless a message is available. Since
@@ -2035,7 +2035,7 @@ dsp_status node_pause(struct node_object *hnode)
 	} else {
 		node_type = node_get_type(hnode);
 		if (node_type != NODE_TASK && node_type != NODE_DAISSOCKET)
-			status = DSP_ENODETYPE;
+			status = -EPERM;
 	}
 	if (DSP_FAILED(status))
 		goto func_end;
@@ -2134,7 +2134,7 @@ dsp_status node_put_message(struct node_object *hnode,
 	node_type = node_get_type(hnode);
 	if (node_type != NODE_MESSAGE && node_type != NODE_TASK &&
 	    node_type != NODE_DAISSOCKET)
-		status = DSP_ENODETYPE;
+		status = -EPERM;
 
 	if (DSP_SUCCEEDED(status)) {
 		/*  Check node state. Can't send messages to a node after
@@ -2283,7 +2283,7 @@ dsp_status node_run(struct node_object *hnode)
 	}
 	node_type = node_get_type(hnode);
 	if (node_type == NODE_DEVICE)
-		status = DSP_ENODETYPE;
+		status = -EPERM;
 	if (DSP_FAILED(status))
 		goto func_end;
 
@@ -2401,7 +2401,7 @@ dsp_status node_terminate(struct node_object *hnode, OUT dsp_status *pstatus)
 		hnode_mgr = hnode->hnode_mgr;
 		node_type = node_get_type(hnode);
 		if (node_type != NODE_TASK && node_type != NODE_DAISSOCKET)
-			status = DSP_ENODETYPE;
+			status = -EPERM;
 	}
 	if (DSP_SUCCEEDED(status)) {
 		/* Check node state */
diff --git a/drivers/dsp/bridge/wmd/msg_sm.c b/drivers/dsp/bridge/wmd/msg_sm.c
index ede098d..6edd3b8 100644
--- a/drivers/dsp/bridge/wmd/msg_sm.c
+++ b/drivers/dsp/bridge/wmd/msg_sm.c
@@ -517,7 +517,7 @@ dsp_status bridge_msg_register_notify(struct msg_queue *msg_queue_obj,
 	}
 
 	if (!(event_mask == DSP_NODEMESSAGEREADY || event_mask == 0)) {
-		status = DSP_ENODETYPE;
+		status = -EPERM;
 		goto func_end;
 	}
 
-- 
1.7.0.4

