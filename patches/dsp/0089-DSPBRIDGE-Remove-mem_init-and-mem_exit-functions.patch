From b27aa2c142f719745d2afc0d713a9cda7435e092 Mon Sep 17 00:00:00 2001
From: Ivan Gomez Castellanos <ivan.gomez@ti.com>
Date: Wed, 24 Mar 2010 12:24:37 -0600
Subject: [PATCH 089/135] DSPBRIDGE: Remove mem_init and mem_exit functions

These functions do nothing. So they are removed from mem.c file.

Signed-off-by: Ivan Gomez Castellanos <ivan.gomez@ti.com>
---
 arch/arm/plat-omap/include/dspbridge/mem.h |   27 ---------------------------
 drivers/dsp/bridge/services/mem.c          |   18 ------------------
 drivers/dsp/bridge/services/services.c     |   10 ++--------
 3 files changed, 2 insertions(+), 53 deletions(-)

diff --git a/arch/arm/plat-omap/include/dspbridge/mem.h b/arch/arm/plat-omap/include/dspbridge/mem.h
index d352b4e..854945a 100644
--- a/arch/arm/plat-omap/include/dspbridge/mem.h
+++ b/arch/arm/plat-omap/include/dspbridge/mem.h
@@ -90,20 +90,6 @@ extern void *mem_alloc(IN u32 byte_size, IN enum mem_poolattrs type);
 extern void *mem_calloc(IN u32 byte_size, IN enum mem_poolattrs type);
 
 /*
- *  ======== mem_exit ========
- *  Purpose:
- *      Discontinue usage of module; free resources when reference count
- *      reaches 0.
- *  Parameters:
- *  Returns:
- *  Requires:
- *      MEM is initialized.
- *  Ensures:
- *      Resources used by module are freed when cRef reaches zero.
- */
-extern void mem_exit(void);
-
-/*
  *  ======== MEM_FREE_OBJECT ========
  *  Purpose:
  *      Utility macro to invalidate an object's signature, and deallocate it.
@@ -138,19 +124,6 @@ extern void mem_exit(void);
 extern s32 mem_get_num_pages(IN void *paddr, IN u32 byte_size);
 
 /*
- *  ======== services_mem_init ========
- *  Purpose:
- *      Initializes private state of MEM module.
- *  Parameters:
- *  Returns:
- *      TRUE if initialized; FALSE if error occured.
- *  Requires:
- *  Ensures:
- *      MEM initialized.
- */
-extern bool services_mem_init(void);
-
-/*
  *  ======== MEM_IS_VALID_HANDLE ========
  *  Purpose:
  *      Validate the object handle.
diff --git a/drivers/dsp/bridge/services/mem.c b/drivers/dsp/bridge/services/mem.c
index caf4f9c..1d3f32d 100644
--- a/drivers/dsp/bridge/services/mem.c
+++ b/drivers/dsp/bridge/services/mem.c
@@ -96,21 +96,3 @@ void *mem_calloc(u32 byte_size, enum mem_poolattrs type)
 	return mem;
 }
 
-/*
- *  ======== mem_exit ========
- *  Purpose:
- *      Discontinue usage of the MEM module.
- */
-void mem_exit(void)
-{
-}
-
-/*
- *  ======== services_mem_init ========
- *  Purpose:
- *      Initialize MEM module private state.
- */
-bool services_mem_init(void)
-{
-	return true;
-}
diff --git a/drivers/dsp/bridge/services/services.c b/drivers/dsp/bridge/services/services.c
index 72cbd8d..d6de172 100644
--- a/drivers/dsp/bridge/services/services.c
+++ b/drivers/dsp/bridge/services/services.c
@@ -46,7 +46,6 @@ void services_exit(void)
 	/* Uninitialize all SERVICES modules here */
 	clk_exit();
 	cfg_exit();
-	mem_exit();
 }
 
 /*
@@ -57,15 +56,14 @@ void services_exit(void)
 bool services_init(void)
 {
 	bool ret = true;
-	bool fcfg, fmem;
+	bool fcfg;
 	bool fclk;
 
 	/* Perform required initialization of SERVICES modules. */
-	fmem = services_mem_init();
 	fcfg = cfg_init();
 	fclk = services_clk_init();
 
-	ret = fcfg && fmem && fclk;
+	ret = fcfg && fclk;
 
 	if (!ret) {
 
@@ -74,10 +72,6 @@ bool services_init(void)
 
 		if (fcfg)
 			cfg_exit();
-
-		if (fmem)
-			mem_exit();
-
 	}
 
 	return ret;
-- 
1.7.0.4

