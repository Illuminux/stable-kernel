From 210499696a19a8a749210bc652db0047693f1181 Mon Sep 17 00:00:00 2001
From: Ivan Gomez Castellanos <ivan.gomez@ti.com>
Date: Fri, 7 May 2010 18:27:24 -0500
Subject: [PATCH 125/135] DSPBRIDGE: Rename functions which contain "wmd" and remove unused prototypes

Since the "wmd" (windows mini driver) refers to Windows OS, the
following functions are renamed:

wmd_brd_delete ==> bridge_brd_delete
dev_get_wmd_context ==> dev_get_bridge_context

And the folowing prototypes are removed because they are not used:

cfg_get_wmd_file_name
wmd_tlb_dsp_va_to_mpu_pa

Signed-off-by: Ivan Gomez Castellanos <ivan.gomez@ti.com>
---
 arch/arm/plat-omap/include/dspbridge/cfg.h |   23 -----------------------
 arch/arm/plat-omap/include/dspbridge/dev.h |    4 ++--
 drivers/dsp/bridge/pmgr/dev.c              |    4 ++--
 drivers/dsp/bridge/rmgr/node.c             |    8 ++++----
 drivers/dsp/bridge/rmgr/proc.c             |    4 ++--
 drivers/dsp/bridge/rmgr/pwr.c              |    8 ++++----
 drivers/dsp/bridge/wmd/_tiomap.h           |   11 -----------
 drivers/dsp/bridge/wmd/chnl_sm.c           |    4 ++--
 drivers/dsp/bridge/wmd/io_sm.c             |    4 ++--
 drivers/dsp/bridge/wmd/tiomap3430.c        |    6 +++---
 drivers/dsp/bridge/wmd/tiomap3430_pwr.c    |    3 +--
 drivers/dsp/bridge/wmd/ue_deh.c            |    2 +-
 12 files changed, 23 insertions(+), 58 deletions(-)

diff --git a/arch/arm/plat-omap/include/dspbridge/cfg.h b/arch/arm/plat-omap/include/dspbridge/cfg.h
index 6571c50..547cacb 100644
--- a/arch/arm/plat-omap/include/dspbridge/cfg.h
+++ b/arch/arm/plat-omap/include/dspbridge/cfg.h
@@ -151,29 +151,6 @@ extern dsp_status cfg_get_object(OUT u32 *pdwValue, u8 dw_type);
 extern void cfg_get_perf_value(OUT bool *pfEnablePerf);
 
 /*
- *  ======== cfg_get_wmd_file_name ========
- *  Purpose:
- *    Get the mini-driver file name for a given device.
- *  Parameters:
- *      dev_node_obj:       Handle to the dev_node who's WMD we are querying.
- *      buf_size:       Size of buffer.
- *      pWMDFileName:   Ptr to a character buffer to hold the WMD filename.
- *  Returns:
- *      DSP_SOK:                On success.
- *      -EFAULT:  dev_node_obj is invalid.
- *      -ENODATA: The filename is not available.
- *  Requires:
- *      CFG initialized.
- *  Ensures:
- *      DSP_SOK:        Not more than buf_size bytes were copied
- *                      into pWMDFileName.
- *
- */
-extern dsp_status cfg_get_wmd_file_name(IN struct cfg_devnode *dev_node_obj,
-					IN u32 buf_size,
-					OUT char *pWMDFileName);
-
-/*
  *  ======== cfg_get_zl_file ========
  *  Purpose:
  *      Retreive the ZLFile, if any, for this board.
diff --git a/arch/arm/plat-omap/include/dspbridge/dev.h b/arch/arm/plat-omap/include/dspbridge/dev.h
index 967ba3d..30f4f7e 100644
--- a/arch/arm/plat-omap/include/dspbridge/dev.h
+++ b/arch/arm/plat-omap/include/dspbridge/dev.h
@@ -505,7 +505,7 @@ extern dsp_status dev_get_symbol(struct dev_object *hdev_obj,
 				 IN CONST char *pstrSym, OUT u32 * pul_value);
 
 /*
- *  ======== dev_get_wmd_context ========
+ *  ======== dev_get_bridge_context ========
  *  Purpose:
  *      Retrieve the WMD Context handle, as returned by the WMD_Create fxn.
  *  Parameters:
@@ -521,7 +521,7 @@ extern dsp_status dev_get_symbol(struct dev_object *hdev_obj,
  *      DSP_SOK:        *phbridge_context contains context handle;
  *      else:           *phbridge_context is NULL;
  */
-extern dsp_status dev_get_wmd_context(struct dev_object *hdev_obj,
+extern dsp_status dev_get_bridge_context(struct dev_object *hdev_obj,
 				      OUT struct bridge_dev_context
 				      **phbridge_context);
 
diff --git a/drivers/dsp/bridge/pmgr/dev.c b/drivers/dsp/bridge/pmgr/dev.c
index 5530123..c7e244e 100644
--- a/drivers/dsp/bridge/pmgr/dev.c
+++ b/drivers/dsp/bridge/pmgr/dev.c
@@ -715,11 +715,11 @@ dsp_status dev_get_symbol(struct dev_object *hdev_obj,
 }
 
 /*
- *  ======== dev_get_wmd_context ========
+ *  ======== dev_get_bridge_context ========
  *  Purpose:
  *      Retrieve the WMD Context handle, as returned by the WMD_Create fxn.
  */
-dsp_status dev_get_wmd_context(struct dev_object *hdev_obj,
+dsp_status dev_get_bridge_context(struct dev_object *hdev_obj,
 			       OUT struct bridge_dev_context **phbridge_context)
 {
 	dsp_status status = DSP_SOK;
diff --git a/drivers/dsp/bridge/rmgr/node.c b/drivers/dsp/bridge/rmgr/node.c
index 96ba1ea..315b09e 100644
--- a/drivers/dsp/bridge/rmgr/node.c
+++ b/drivers/dsp/bridge/rmgr/node.c
@@ -346,7 +346,7 @@ dsp_status node_allocate(struct proc_object *hprocessor,
 	if (DSP_FAILED(status))
 		goto func_end;
 
-	status = dev_get_wmd_context(hdev_obj, &pbridge_context);
+	status = dev_get_bridge_context(hdev_obj, &pbridge_context);
 	if (!pbridge_context) {
 		status = -EFAULT;
 		goto func_end;
@@ -2966,7 +2966,7 @@ static dsp_status get_proc_props(struct node_mgr *hnode_mgr,
 	struct bridge_dev_context *pbridge_context;
 	dsp_status status = DSP_SOK;
 
-	status = dev_get_wmd_context(hdev_obj, &pbridge_context);
+	status = dev_get_bridge_context(hdev_obj, &pbridge_context);
 	if (!pbridge_context)
 		status = -EFAULT;
 
@@ -3143,7 +3143,7 @@ static u32 ovly(void *priv_ref, u32 ulDspRunAddr, u32 ulDspLoadAddr,
 
 	/* Call new MemCopy function */
 	intf_fxns = hnode_mgr->intf_fxns;
-	status = dev_get_wmd_context(hnode_mgr->hdev_obj, &hbridge_context);
+	status = dev_get_bridge_context(hnode_mgr->hdev_obj, &hbridge_context);
 	if (DSP_SUCCEEDED(status)) {
 		status =
 		    (*intf_fxns->pfn_brd_mem_copy) (hbridge_context,
@@ -3186,7 +3186,7 @@ static u32 mem_write(void *priv_ref, u32 ulDspAddr, void *pbuf,
 
 	/* Call new MemWrite function */
 	intf_fxns = hnode_mgr->intf_fxns;
-	status = dev_get_wmd_context(hnode_mgr->hdev_obj, &hbridge_context);
+	status = dev_get_bridge_context(hnode_mgr->hdev_obj, &hbridge_context);
 	status = (*intf_fxns->pfn_brd_mem_write) (hbridge_context, pbuf,
 					ulDspAddr, ul_num_bytes, mem_sect_type);
 
diff --git a/drivers/dsp/bridge/rmgr/proc.c b/drivers/dsp/bridge/rmgr/proc.c
index 5ec7ca5..a962fd8 100644
--- a/drivers/dsp/bridge/rmgr/proc.c
+++ b/drivers/dsp/bridge/rmgr/proc.c
@@ -171,7 +171,7 @@ proc_attach(u32 processor_id,
 
 	status = dev_get_intf_fxns(hdev_obj, &p_proc_object->intf_fxns);
 	if (DSP_SUCCEEDED(status)) {
-		status = dev_get_wmd_context(hdev_obj,
+		status = dev_get_bridge_context(hdev_obj,
 					     &p_proc_object->hbridge_context);
 		if (DSP_FAILED(status))
 			kfree(p_proc_object);
@@ -293,7 +293,7 @@ dsp_status proc_auto_start(struct cfg_devnode *dev_node_obj,
 	p_proc_object->hmgr_obj = hmgr_obj;
 	status = dev_get_intf_fxns(hdev_obj, &p_proc_object->intf_fxns);
 	if (DSP_SUCCEEDED(status))
-		status = dev_get_wmd_context(hdev_obj,
+		status = dev_get_bridge_context(hdev_obj,
 					     &p_proc_object->hbridge_context);
 	if (DSP_FAILED(status))
 		goto func_cont;
diff --git a/drivers/dsp/bridge/rmgr/pwr.c b/drivers/dsp/bridge/rmgr/pwr.c
index cd690df..97b9eff 100644
--- a/drivers/dsp/bridge/rmgr/pwr.c
+++ b/drivers/dsp/bridge/rmgr/pwr.c
@@ -49,7 +49,7 @@ dsp_status pwr_sleep_dsp(IN CONST u32 sleepCode, IN CONST u32 timeout)
 	     hdev_obj != NULL;
 	     hdev_obj =
 	     (struct dev_object *)drv_get_next_dev_object((u32) hdev_obj)) {
-		if (DSP_FAILED(dev_get_wmd_context(hdev_obj,
+		if (DSP_FAILED(dev_get_bridge_context(hdev_obj,
 						(struct bridge_dev_context **)
 						   &dw_context))) {
 			continue;
@@ -91,7 +91,7 @@ dsp_status pwr_wake_dsp(IN CONST u32 timeout)
 	     hdev_obj != NULL;
 	     hdev_obj = (struct dev_object *)drv_get_next_dev_object
 	     ((u32) hdev_obj)) {
-		if (DSP_SUCCEEDED(dev_get_wmd_context(hdev_obj,
+		if (DSP_SUCCEEDED(dev_get_bridge_context(hdev_obj,
 						      (struct bridge_dev_context
 						       **)&dw_context))) {
 			if (DSP_SUCCEEDED
@@ -127,7 +127,7 @@ dsp_status pwr_pm_pre_scale(IN u16 voltage_domain, u32 level)
 	     hdev_obj != NULL;
 	     hdev_obj = (struct dev_object *)drv_get_next_dev_object
 	     ((u32) hdev_obj)) {
-		if (DSP_SUCCEEDED(dev_get_wmd_context(hdev_obj,
+		if (DSP_SUCCEEDED(dev_get_bridge_context(hdev_obj,
 						      (struct bridge_dev_context
 						       **)&dw_context))) {
 			if (DSP_SUCCEEDED
@@ -163,7 +163,7 @@ dsp_status pwr_pm_post_scale(IN u16 voltage_domain, u32 level)
 	     hdev_obj != NULL;
 	     hdev_obj = (struct dev_object *)drv_get_next_dev_object
 	     ((u32) hdev_obj)) {
-		if (DSP_SUCCEEDED(dev_get_wmd_context(hdev_obj,
+		if (DSP_SUCCEEDED(dev_get_bridge_context(hdev_obj,
 						      (struct bridge_dev_context
 						       **)&dw_context))) {
 			if (DSP_SUCCEEDED
diff --git a/drivers/dsp/bridge/wmd/_tiomap.h b/drivers/dsp/bridge/wmd/_tiomap.h
index 0d5da15..f209d03 100644
--- a/drivers/dsp/bridge/wmd/_tiomap.h
+++ b/drivers/dsp/bridge/wmd/_tiomap.h
@@ -357,17 +357,6 @@ struct bridge_dev_context {
  */
 extern s32 dsp_debug;
 
-	/*
-	 * ======== wmd_tlb_dsp_va_to_mpu_pa ========
-	 *     Given a DSP virtual address, traverse the page table and return
-	 *     a corresponding MPU physical address and size.
-	 */
-extern dsp_status wmd_tlb_dsp_va_to_mpu_pa(
-					struct bridge_dev_context *dev_context,
-					IN u32 ulVirtAddr,
-					OUT u32 *ulPhysAddr,
-					OUT u32 *sizeTlb);
-
 /*
  *  ======== sm_interrupt_dsp ========
  *  Purpose:
diff --git a/drivers/dsp/bridge/wmd/chnl_sm.c b/drivers/dsp/bridge/wmd/chnl_sm.c
index 639367b..c4857a8 100644
--- a/drivers/dsp/bridge/wmd/chnl_sm.c
+++ b/drivers/dsp/bridge/wmd/chnl_sm.c
@@ -133,7 +133,7 @@ dsp_status bridge_chnl_add_io_req(struct chnl_object *chnl_obj, void *pHostBuf,
 	}
 
 	dev_obj = dev_get_first();
-	dev_get_wmd_context(dev_obj, &dev_ctxt);
+	dev_get_bridge_context(dev_obj, &dev_ctxt);
 	if (!dev_ctxt)
 		status = -EFAULT;
 
@@ -594,7 +594,7 @@ dsp_status bridge_chnl_get_ioc(struct chnl_object *chnl_obj, u32 dwTimeOut,
 	}
 
 	dev_obj = dev_get_first();
-	dev_get_wmd_context(dev_obj, &dev_ctxt);
+	dev_get_bridge_context(dev_obj, &dev_ctxt);
 	if (!dev_ctxt)
 		status = -EFAULT;
 
diff --git a/drivers/dsp/bridge/wmd/io_sm.c b/drivers/dsp/bridge/wmd/io_sm.c
index 39de131..f62d355 100644
--- a/drivers/dsp/bridge/wmd/io_sm.c
+++ b/drivers/dsp/bridge/wmd/io_sm.c
@@ -187,7 +187,7 @@ dsp_status bridge_io_create(OUT struct io_mgr **phIOMgr,
 	 * size of message buffer in shared memory is configurable in
 	 * the base image.
 	 */
-	dev_get_wmd_context(hdev_obj, &hbridge_context);
+	dev_get_bridge_context(hdev_obj, &hbridge_context);
 	if (!hbridge_context) {
 		status = -EFAULT;
 		goto func_end;
@@ -324,7 +324,7 @@ dsp_status bridge_io_on_loaded(struct io_mgr *hio_mgr)
 		HW_PAGE_SIZE64KB, HW_PAGE_SIZE4KB
 	};
 
-	status = dev_get_wmd_context(hio_mgr->hdev_obj, &pbridge_context);
+	status = dev_get_bridge_context(hio_mgr->hdev_obj, &pbridge_context);
 	if (!pbridge_context) {
 		status = -EFAULT;
 		goto func_end;
diff --git a/drivers/dsp/bridge/wmd/tiomap3430.c b/drivers/dsp/bridge/wmd/tiomap3430.c
index 38d6f18..af9e825 100644
--- a/drivers/dsp/bridge/wmd/tiomap3430.c
+++ b/drivers/dsp/bridge/wmd/tiomap3430.c
@@ -714,14 +714,14 @@ static dsp_status bridge_brd_stop(struct bridge_dev_context *hDevContext)
 }
 
 /*
- *  ======== wmd_brd_delete ========
+ *  ======== bridge_brd_delete ========
  *  purpose:
  *      Puts DSP in Low power mode
  *
  *  Preconditions :
  *  a) None
  */
-static dsp_status wmd_brd_delete(struct bridge_dev_context *hDevContext)
+static dsp_status bridge_brd_delete(struct bridge_dev_context *hDevContext)
 {
 	dsp_status status = DSP_SOK;
 	struct bridge_dev_context *dev_context = hDevContext;
@@ -1051,7 +1051,7 @@ static dsp_status bridge_dev_destroy(struct bridge_dev_context *hDevContext)
 		return -EFAULT;
 
 	/* first put the device to stop state */
-	wmd_brd_delete(dev_context);
+	bridge_brd_delete(dev_context);
 	if (dev_context->pt_attrs) {
 		pt_attrs = dev_context->pt_attrs;
 		kfree(pt_attrs->pg_info);
diff --git a/drivers/dsp/bridge/wmd/tiomap3430_pwr.c b/drivers/dsp/bridge/wmd/tiomap3430_pwr.c
index 91aab1d..918466a 100644
--- a/drivers/dsp/bridge/wmd/tiomap3430_pwr.c
+++ b/drivers/dsp/bridge/wmd/tiomap3430_pwr.c
@@ -418,8 +418,7 @@ void dsp_clk_wakeup_event_ctrl(u32 ClkId, bool enable)
 	if (!hdev_object)
 		return;
 
-	status = dev_get_wmd_context(hdev_object, &bridge_context);
-
+	status = dev_get_bridge_context(hdev_object, &bridge_context);
 	if (!bridge_context)
 		return;
 
diff --git a/drivers/dsp/bridge/wmd/ue_deh.c b/drivers/dsp/bridge/wmd/ue_deh.c
index 2ca160b..a82f699 100644
--- a/drivers/dsp/bridge/wmd/ue_deh.c
+++ b/drivers/dsp/bridge/wmd/ue_deh.c
@@ -82,7 +82,7 @@ dsp_status bridge_deh_create(struct deh_mgr **ret_deh_mgr,
 	 *  size of message buffer in shared memory is configurable in
 	 *  the base image. */
 	/* Get WMD context info. */
-	dev_get_wmd_context(hdev_obj, &hbridge_context);
+	dev_get_bridge_context(hdev_obj, &hbridge_context);
 	DBC_ASSERT(hbridge_context);
 	dummy_va_addr = NULL;
 	/* Allocate IO manager object: */
-- 
1.7.0.4

