From 5ee489b8c0bf30ce8e6e7871c48cc086c3434e92 Mon Sep 17 00:00:00 2001
From: Omar Ramirez Luna <omar.ramirez@ti.com>
Date: Fri, 21 May 2010 17:46:32 -0500
Subject: [PATCH 135/135] DSPBRIDGE: move gpt request/free to dsp_clk init/exit

Avoid request/free for gpt timers every time they are tried
to be enabled/disabled. request/free is now moved to init/exit
dsp_clk functions.

At first it looked better than to hold the clock handle as long
as bridge is enabled, but this is causing issues when suspending
the device because request also resets the clock.

Signed-off-by: Omar Ramirez Luna <omar.ramirez@ti.com>
---
 drivers/dsp/bridge/core/dsp-clock.c |   17 ++++++++++++++---
 1 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/dsp/bridge/core/dsp-clock.c b/drivers/dsp/bridge/core/dsp-clock.c
index a940671..e1ebdba 100644
--- a/drivers/dsp/bridge/core/dsp-clock.c
+++ b/drivers/dsp/bridge/core/dsp-clock.c
@@ -115,8 +115,13 @@ static s8 get_clk_type(u8 id)
  */
 void dsp_clk_exit(void)
 {
+	int i;
+
 	dsp_clock_disable_all(dsp_clocks);
 
+	for (i = 0; i < DSP_CLK_GPT8; i++)
+		omap_dm_timer_free(timer[i]);
+
 	clk_put(iva2_clk);
 	clk_put(ssi.sst_fck);
 	clk_put(ssi.ssr_fck);
@@ -131,6 +136,7 @@ void dsp_clk_exit(void)
 void dsp_clk_init(void)
 {
 	static struct platform_device dspbridge_device;
+	int i;
 
 	dspbridge_device.dev.bus = &platform_bus_type;
 
@@ -145,6 +151,12 @@ void dsp_clk_init(void)
 	if (IS_ERR(ssi.sst_fck) || IS_ERR(ssi.ssr_fck) || IS_ERR(ssi.ick))
 		dev_err(bridge, "failed to get ssi: sst %p, ssr %p, ick %p\n",
 					ssi.sst_fck, ssi.ssr_fck, ssi.ick);
+
+	for (i = 0; i < DSP_CLK_GPT8; i++) {
+		timer[i] = omap_dm_timer_request_specific(DMT_ID(GPT_CLK + i));
+		if (timer[i])
+			omap_dm_timer_disable(timer[i]);
+	}
 }
 
 static void mcbsp_clk_prepare(bool flag, u8 id)
@@ -251,8 +263,7 @@ dsp_status dsp_clk_enable(IN enum dsp_clk_id clk_id)
 		clk_enable(iva2_clk);
 		break;
 	case GPT_CLK:
-		timer[clk_id - 1] =
-				omap_dm_timer_request_specific(DMT_ID(clk_id));
+		omap_dm_timer_enable(timer[clk_id - 1]);
 		break;
 	case MCBSP_CLK:
 		mcbsp_clk_prepare(true, clk_id);
@@ -327,7 +338,7 @@ dsp_status dsp_clk_disable(IN enum dsp_clk_id clk_id)
 		clk_disable(iva2_clk);
 		break;
 	case GPT_CLK:
-		omap_dm_timer_free(timer[clk_id - 1]);
+		omap_dm_timer_disable(timer[clk_id - 1]);
 		break;
 	case MCBSP_CLK:
 		mcbsp_clk_prepare(false, clk_id);
-- 
1.7.0.4

