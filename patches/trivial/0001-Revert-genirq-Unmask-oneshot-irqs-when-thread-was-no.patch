From f4fdb6e9484954909acfb2dc5f7381537228e73e Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Wed, 7 Mar 2012 18:33:27 -0600
Subject: [PATCH] Revert "genirq: Unmask oneshot irqs when thread was not
 woken"

This reverts commit aa0eb3474beae8f6d9dcc2311dc02bea50cfd7b7.

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 kernel/irq/chip.c |   25 ++-----------------------
 1 files changed, 2 insertions(+), 23 deletions(-)

diff --git a/kernel/irq/chip.c b/kernel/irq/chip.c
index fb7db75..3961a70 100644
--- a/kernel/irq/chip.c
+++ b/kernel/irq/chip.c
@@ -333,24 +333,6 @@ out_unlock:
 }
 EXPORT_SYMBOL_GPL(handle_simple_irq);
 
-/*
- * Called unconditionally from handle_level_irq() and only for oneshot
- * interrupts from handle_fasteoi_irq()
- */
-static void cond_unmask_irq(struct irq_desc *desc)
-{
-	/*
-	 * We need to unmask in the following cases:
-	 * - Standard level irq (IRQF_ONESHOT is not set)
-	 * - Oneshot irq which did not wake the thread (caused by a
-	 *   spurious interrupt or a primary handler handling it
-	 *   completely).
-	 */
-	if (!irqd_irq_disabled(&desc->irq_data) &&
-	    irqd_irq_masked(&desc->irq_data) && !desc->threads_oneshot)
-		unmask_irq(desc);
-}
-
 /**
  *	handle_level_irq - Level type irq handler
  *	@irq:	the interrupt number
@@ -383,8 +365,8 @@ handle_level_irq(unsigned int irq, struct irq_desc *desc)
 
 	handle_irq_event(desc);
 
-	cond_unmask_irq(desc);
-
+	if (!irqd_irq_disabled(&desc->irq_data) && !(desc->istate & IRQS_ONESHOT))
+		unmask_irq(desc);
 out_unlock:
 	raw_spin_unlock(&desc->lock);
 }
@@ -438,9 +420,6 @@ handle_fasteoi_irq(unsigned int irq, struct irq_desc *desc)
 	preflow_handler(desc);
 	handle_irq_event(desc);
 
-	if (desc->istate & IRQS_ONESHOT)
-		cond_unmask_irq(desc);
-
 out_eoi:
 	desc->irq_data.chip->irq_eoi(&desc->irq_data);
 out_unlock:
-- 
1.7.9.1

